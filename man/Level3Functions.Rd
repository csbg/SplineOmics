% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_input_validation.R
\name{Level3Functions}
\alias{Level3Functions}
\title{Level3Functions: A class for level 3 utility functions}
\description{
Level3Functions: A class for level 3 utility functions

Level3Functions: A class for level 3 utility functions
}
\details{
This class provides methods for creating error messages and checking
batch columns.


The function verifies that the `voom` object contains the following 
components:
- `E`: A matrix of log2-counts per million (logCPM) values.
- `weights`: A matrix of observation-specific weights that matches the 
dimensions of `E`.
- `design`: A matrix representing the design matrix used in the linear 
modeling, 
  with the same number of rows as there are columns in `E`.

The function also checks for optional components such as:
- `genes`: A data frame of gene annotations.
- `targets`: A data frame of target information.
- `sample.weights`: A numeric vector of sample-specific weights.

If any of these checks fail, the function stops and reports the issues.
If the structure is valid, a message confirming the validity is printed.
}
\seealso{
\code{\link{Level2Functions}}

Check the structure of a voom object
}
\section{Super class}{
\code{\link[SplineOmics:Level4Functions]{SplineOmics::Level4Functions}} -> \code{Level3Functions}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Level3Functions-check_voom_structure}{\code{Level3Functions$check_voom_structure()}}
\item \href{#method-Level3Functions-check_batch_column}{\code{Level3Functions$check_batch_column()}}
\item \href{#method-Level3Functions-check_condition_time_consistency}{\code{Level3Functions$check_condition_time_consistency()}}
\item \href{#method-Level3Functions-clone}{\code{Level3Functions$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="SplineOmics" data-topic="Level4Functions" data-id="create_error_message"><a href='../../SplineOmics/html/Level4Functions.html#method-Level4Functions-create_error_message'><code>SplineOmics::Level4Functions$create_error_message()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Level3Functions-check_voom_structure"></a>}}
\if{latex}{\out{\hypertarget{method-Level3Functions-check_voom_structure}{}}}
\subsection{Method \code{check_voom_structure()}}{
This function checks the structure of a `voom` object to ensure that it
contains 
all the expected components and that these components have the correct 
types 
and dimensions. The function does not check the actual data within the 
matrices.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Level3Functions$check_voom_structure(voom_obj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{voom_obj}}{A list representing a `voom` object, typically created 
by the 
  `voom` function from the `limma` package.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean TRUE or FALSE. However, the function is mostly called for
its side effects, which stop the script if the structure is not valid.

Check Batch Column
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Level3Functions-check_batch_column"></a>}}
\if{latex}{\out{\hypertarget{method-Level3Functions-check_batch_column}{}}}
\subsection{Method \code{check_batch_column()}}{
This method checks the batch column in the metadata and provides 
appropriate messages.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Level3Functions$check_batch_column(meta, meta_batch_column, data_meta_index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{meta}}{A dataframe containing metadata.}

\item{\code{meta_batch_column}}{A character string specifying the batch column
in the metadata.}

\item{\code{data_meta_index}}{An optional parameter specifying the index of the
data/meta pair. Default is NA.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL. The method is used for its side effects of throwing errors 
or printing messages.

Check Condition Time Consistency
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Level3Functions-check_condition_time_consistency"></a>}}
\if{latex}{\out{\hypertarget{method-Level3Functions-check_condition_time_consistency}{}}}
\subsection{Method \code{check_condition_time_consistency()}}{
This function checks whether the values in the `condition` column
have unique values for each block of identical `Time` values in the 
`meta` dataframe.
Additionally, it ensures that every new block of a given time has a 
new value
in the `condition` column.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Level3Functions$check_condition_time_consistency(meta, condition)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{meta}}{A dataframe containing the metadata, including the `Time`
column.}

\item{\code{condition}}{A character string specifying the column name in `meta`
used to define groups for analysis.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical TRUE if the condition values are consistent with the
 time series pattern.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Level3Functions-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Level3Functions-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Level3Functions$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
