% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_data.R
\name{extract_data}
\alias{extract_data}
\title{Extract a rectangular block from a dataframe and make it to a matrix}
\usage{
extract_data(
  data,
  bottom_row,
  right_col,
  top_row = 1,
  left_col = 1,
  feature_name_columns = NA,
  use_row_index = FALSE
)
}
\arguments{
\item{data}{\code{data.frame}: A dataframe containing the full input, including
annotation columns and the numeric block to extract.}

\item{bottom_row}{\code{integer(1)}: Specifies the last (bottom) row of the
numeric data block. Must be >= \code{top_row}.}

\item{right_col}{\code{integer(1)} | \code{character(1)}: Same format as \code{left_col}.
Specifies the right-most column of the numeric block. Must be >= \code{left_col}
after conversion.}

\item{top_row}{\code{integer(1)}: Specifies the first (top) row of the numeric
data block. Row indexing is 1-based.}

\item{left_col}{\code{integer(1)} | \code{character(1)}: Column specifier for the
left-most column of the data block. Can be either:
\itemize{
\item An integer index (e.g., 2 for the second column), or
\item A character string using Excel-style letters (e.g., "A", "AB").
}

Column names (e.g., "age") are \strong{not} allowed here. Only letters or numeric
indices are accepted.}

\item{feature_name_columns}{\code{character()} | \code{NULL}: Optional character
vector specifying columns in \code{data} to be used as row (feature) names in
the output. If \code{NA}, generic feature names are used. These row names are
used everywhere to label the features, such as to label the plots in the
\code{cluster_hits()} function report.}

\item{use_row_index}{\code{logical(1)}: If \code{TRUE}, prepend the row index to
each combined feature name to ensure uniqueness. Defaults to \code{FALSE}.}
}
\value{
A numeric matrix with cleaned values and appropriate column names.
}
\description{
This function extracts a rectangular block from a dataframe using
user-specified
top/bottom row indices and left/right column identifiers (numeric or
Excel-style letters).
It ensures the block contains only numeric values or NAs, and returns a
cleaned matrix.
}
\examples{
# Tiny demo table with two header rows, feature columns, and numeric block
df <- data.frame(
    feat_id = c(NA, NA, "g1", "g2", "g3"),
    feat_sym = c(NA, NA, "TP53", "EGFR", "BAX"),
    A = c("cond", "t0", 1, 2, 3),
    B = c("cond", "t1", 4, 5, 6),
    C = c("ctrl", "t0", 7, 8, 9),
    D = c("ctrl", "t1", 10, 11, 12),
    check.names = FALSE
)

# Example 1: extract numeric block using Excel letters, build headers from
# the two rows above (they get collapsed like "cond_t0", "ctrl_t1", ...)
m1 <- extract_data(
    data = df,
    top_row = 3,
    bottom_row = 5,
    left_col = "A",
    right_col = "D",
    feature_name_columns = c("feat_id", "feat_sym"),
    use_row_index = FALSE
)
m1

# Example 2: same extraction but with numeric column indices and row index
# prepended to ensure uniqueness of feature names
m2 <- extract_data(
    data = df,
    top_row = 3,
    bottom_row = 5,
    left_col = 3,
    right_col = 6,
    feature_name_columns = c("feat_id", "feat_sym"),
    use_row_index = TRUE
)
m2

}
