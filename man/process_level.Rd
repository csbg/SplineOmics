% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_limma_splines.R
\name{process_level}
\alias{process_level}
\title{Process Level}
\usage{
process_level(
  level,
  level_index,
  spline_params,
  data,
  meta,
  design,
  condition,
  feature_names,
  padjust_method,
  mode
)
}
\arguments{
\item{level}{The level within the condition to process.}

\item{level_index}{The index of the level within the condition.}

\item{spline_params}{A list of spline parameters for the analysis.}

\item{data}{A matrix of data values.}

\item{meta}{A dataframe containing metadata.}

\item{design}{A design formula or matrix for the LIMMA analysis.}

\item{condition}{A character string specifying the condition.}

\item{feature_names}{A non-empty character vector of feature names.}

\item{padjust_method}{A character string specifying the p-adjustment method.}

\item{mode}{A character string specifying the mode 
('isolated' or 'integrated').}
}
\value{
A list containing the name of the results and the top table of 
         results.
}
\description{
Processes a single level within a condition, performing LIMMA analysis 
and generating the top table of results.
}
\examples{
\dontrun{
data <- matrix(runif(100), nrow = 10)
meta <- data.frame(Time = seq(1, 10), condition = rep(c("A", "B"), each = 5))
design <- "~ 1"
spline_params <- list(spline_type = c("n"), dof = list(3))
level <- "A"
level_index <- 1
condition <- "condition"
feature_names <- c("feature1", "feature2")
padjust_method <- "BH"
mode <- "isolated"
process_level(level, level_index, spline_params, data, meta, design, 
              condition, feature_names, padjust_method, mode)}

}
\seealso{
\code{\link{within_level}}, \code{\link{process_top_table}}
}
