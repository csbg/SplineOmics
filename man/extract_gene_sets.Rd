% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_gene_sets.R
\name{extract_gene_sets}
\alias{extract_gene_sets}
\title{Download Gene Set Annotations from Bioconductor Organism Databases}
\usage{
extract_gene_sets(
  organism_db = "org.Hs.eg.db",
  output_dir = here::here(),
  filename = NULL
)
}
\arguments{
\item{organism_db}{A string specifying the Bioconductor organism 
annotation database to use (e.g., `"org.Hs.eg.db"` for human or 
`"org.Mm.eg.db"` for mouse).}

\item{output_dir}{A string specifying the output directory where the 
`.tsv` file will be saved. Defaults to the current project directory 
as defined by `here::here()`.}

\item{filename}{An optional string specifying the filename for the 
output file. If `NULL` (default), a filename is generated automatically 
with a timestamp.}
}
\value{
A `data.frame` of gene set annotations with three columns:
\describe{
  \item{DB}{Ontology/database source, e.g. `"GO_BP"`, `"GO_MF"`, `"GO_CC"`,
  or `"KEGG"` (if available).}
  \item{Geneset}{Ontology term ID or pathway ID (e.g. GO ID, KEGG ID).}
  \item{Gene}{Gene symbol (\code{SYMBOL}).}
}
}
\description{
This function extracts gene-to-ontology mappings from a specified 
Bioconductor organism annotation package (e.g., `org.Hs.eg.db`, 
`org.Mm.eg.db`) and saves the gene sets to a `.tsv` file in a 
standardized format. The output includes mappings for Gene Ontology 
(GO) Biological Process (BP), Molecular Function (MF), Cellular 
Component (CC), and KEGG pathways. The resulting file can be used 
directly with enrichment functions such as `clusterProfiler::enricher()` 
with `TERM2GENE`.
}
\details{
The TSV has three columns:
\describe{
  \item{DB}{Ontology/database source, e.g., \code{"GO_BP"}, \code{"GO_MF"},
  \code{"GO_CC"}, or \code{"KEGG"} (if available).}
  \item{Geneset}{Ontology term ID or pathway ID (e.g., GO ID, KEGG ID).}
  \item{Gene}{Gene symbol (\code{SYMBOL}).}
}
Note: Some \code{org.*.eg.db} packages no longer include KEGG mappings; in
such cases the KEGG section will be empty.

In addition to returning the `data.frame`, the function also writes the same
table to disk as a `.tsv` file in the specified `output_dir`.
}
\examples{
# Minimal real example (runs only if org package is installed)
tmp <- tempdir()
if (requireNamespace("org.Mm.eg.db", quietly = TRUE) &&
    requireNamespace("AnnotationDbi", quietly = TRUE)) {
  gs <- extract_gene_sets(
    organism_db = "org.Mm.eg.db",
    output_dir  = tmp,
    filename    = "mm_genesets.tsv"
  )
  head(gs)
  # The file path:
  file.path(tmp, "mm_genesets.tsv")
}

# If the organism package is not installed, you can still see the TSV format:
tiny <- data.frame(
  DB = c("GO_BP", "GO_MF"),
  Geneset = c("GO:0008150", "GO:0003674"),
  Gene = c("Trp53", "Egfr"),
  stringsAsFactors = FALSE
)
utils::write.table(
  tiny,
  file = file.path(tmp, "example_genesets.tsv"),
  sep = "\t", row.names = FALSE, col.names = TRUE, quote = FALSE
)

}
