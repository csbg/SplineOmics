[{"path":"https://csbg.github.io/SplineOmics/CHANGELOG.html","id":null,"dir":"","previous_headings":"","what":"Changelog","title":"Changelog","text":"notable changes project documented file. format based Keep Changelog, project adheres Semantic Versioning.","code":""},{"path":"https://csbg.github.io/SplineOmics/CHANGELOG.html","id":"template-for-changelog-entries","dir":"","previous_headings":"","what":"Template for Changelog Entries","title":"Changelog","text":"release section follow structure :","code":""},{"path":[]},{"path":"https://csbg.github.io/SplineOmics/CHANGELOG.html","id":"added","dir":"","previous_headings":"Template for Changelog Entries > [Version] - YYYY-MM-DD","what":"Added","title":"Changelog","text":"New features functionality introduced release.","code":""},{"path":"https://csbg.github.io/SplineOmics/CHANGELOG.html","id":"changed","dir":"","previous_headings":"Template for Changelog Entries > [Version] - YYYY-MM-DD","what":"Changed","title":"Changelog","text":"Updates modifications existing features.","code":""},{"path":"https://csbg.github.io/SplineOmics/CHANGELOG.html","id":"fixed","dir":"","previous_headings":"Template for Changelog Entries > [Version] - YYYY-MM-DD","what":"Fixed","title":"Changelog","text":"Bugs resolved.","code":""},{"path":"https://csbg.github.io/SplineOmics/CHANGELOG.html","id":"deprecated","dir":"","previous_headings":"Template for Changelog Entries > [Version] - YYYY-MM-DD","what":"Deprecated","title":"Changelog","text":"Features still functional slated removal future.","code":""},{"path":"https://csbg.github.io/SplineOmics/CHANGELOG.html","id":"removed","dir":"","previous_headings":"Template for Changelog Entries > [Version] - YYYY-MM-DD","what":"Removed","title":"Changelog","text":"Features functionality removed.","code":""},{"path":"https://csbg.github.io/SplineOmics/CHANGELOG.html","id":"security","dir":"","previous_headings":"Template for Changelog Entries > [Version] - YYYY-MM-DD","what":"Security","title":"Changelog","text":"security-related updates patches. Examples: - Added: Introduced new plotting function plotTimeSeries(). - Fixed: Resolved issue causing crashes input data missing values. - Changed: Modified default parameters normalizeData().","code":""},{"path":[]},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement thomas.rauter@plus.ac.. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://csbg.github.io/SplineOmics/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"pulling-the-docker-container","dir":"Articles","previous_headings":"","what":"Pulling the Docker Container","title":"Docker-instructions","text":"pull Docker container, use following command. Make sure check newest version specific version need visiting Docker Hub repository. face ‘permission denied’ issues, check vignette","code":"docker pull thomasrauter/splineomics:0.1.0"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"running-the-docker-container","dir":"Articles","previous_headings":"","what":"Running the Docker Container","title":"Docker-instructions","text":"run Docker container, can use one following commands, depending operating system. running command, ensure directory containing two subfolders: input output. used transfer files local machine Docker container. Linux macOS (Bash): Windows (PowerShell): container running, open web browser navigate http://localhost:8888. Log using following credentials: Username: rstudio Password: one set -e PASSWORD=123 option (123 case) long container running, can work localhost page RStudio, also SplineOmics package installed. /home/rstudio/ R session working folder. Stop container: Start container :","code":"docker run -it -d \\     -v $(pwd)/input:/home/rstudio/input \\     -v $(pwd)/output:/home/rstudio/output \\     -p 8888:8787 \\     -e PASSWORD=123 \\     --name splineomics \\     thomasrauter/splineomics:0.1.0 docker run -it -d `     -v \"${PWD}\\input:/home/rstudio/input\" `     -v \"${PWD}\\output:/home/rstudio/output\" `     -p 8888:8787 `     -e PASSWORD=123 `     --name splineomics `     thomasrauter/splineomics:0.1.0 docker stop splineomics docker start splineomics"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"using-the-docker-desktop-gui-instead","dir":"Articles","previous_headings":"","what":"Using the Docker Desktop gui instead","title":"Docker-instructions","text":"Instead pasting commands Power- Bashshell, can also graphical user interface Docker Desktop.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"input-and-output-file-management","dir":"Articles","previous_headings":"","what":"Input and Output File Management","title":"Docker-instructions","text":"input output directories local machine mounted corresponding directories inside Docker container. allows seamless file transfer local machine container. Place input files (e.g., data, metadata, annotation files) input directory local machine. files automatically appear /home/rstudio/input inside container. files generated RStudio within container saved /home/rstudio/output. files automatically appear output directory local machine.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"inspect-docker-container-installations","dir":"Articles","previous_headings":"","what":"Inspect Docker container installations","title":"Docker-instructions","text":"see R packages system installations make Docker container, can run following command terminal RStudio localhost browser page. /home/rstudio/output dir mounted local filesystem, make installation log files available .","code":"cp -r /log home/rstudio/output"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"installing-additional-r-packages-in-the-container","dir":"Articles","previous_headings":"","what":"Installing additional R packages in the container","title":"Docker-instructions","text":"New R packages can installed normal way: However, note packages installed running container lost container deleted rebuilt.","code":"install.packages(\"package_name\")"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"permanent-additions","dir":"Articles","previous_headings":"","what":"Permanent additions","title":"Docker-instructions","text":"want permanently add R packages, R scripts, files SplineOmics Docker image, can use base image building new image. ensure changes saved new image, rather lost container deleted. example: Run container new image commands described .","code":"# Use the SplineOmics image as the base image FROM thomasrauter/splineomics:0.1.0  # Install the data.table package permanently RUN R -e \"install.packages('data.table')\"  # Optionally, add custom R scripts to the image COPY your_script.R /home/rstudio/your_script.R  # Set the working directory WORKDIR /home/rstudio  # Expose RStudio Server port EXPOSE 8787  # Start RStudio server CMD [\"/init\"]  # Build new image: # docker build -t your_new_image_name ."},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"creating-a-reproducible-docker-container-with-automated-analysis","dir":"Articles","previous_headings":"","what":"Creating a Reproducible Docker Container with Automated Analysis","title":"Docker-instructions","text":"final analysis script inside Docker container SplineOmics package, want scientists can easily reproduce results running just one line code, follow guide . instruct create new image based container, can save example Docker Hub. Others can download image, run container get exact results got.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"prepare-your-analysis-and-scripts","dir":"Articles","previous_headings":"Creating a Reproducible Docker Container with Automated Analysis","what":"1. Prepare your analysis and scripts","title":"Docker-instructions","text":"Ensure analysis scripts necessary files saved dedicated directory inside container (e.g., /home/rstudio/analysis/). analysis script take input files directory like /home/rstudio/input/ (already inside container need mounted reproducing analysis) output results /home/rstudio/output/. /home/rstudio/output/ directory mounted local directory user’s machine, making results accessible outside container. Example directory structure:","code":"/home/rstudio/ └── analysis/     ├── final_analysis.R   # Main analysis script     └── helper_functions.R # Supporting scripts"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"create-an-entry-point-script","dir":"Articles","previous_headings":"Creating a Reproducible Docker Container with Automated Analysis","what":"2. Create an Entry Point Script","title":"Docker-instructions","text":"Create bash script (run_analysis.sh) runs analysis automatically. Example run_analysis.sh: Save script /home/rstudio/.","code":"#!/bin/bash Rscript /home/rstudio/analysis/final_analysis.R tail -f /dev/null  # Keep the container running after analysis"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"commit-the-container-as-a-new-image-with-an-entry-point","dir":"Articles","previous_headings":"Creating a Reproducible Docker Container with Automated Analysis","what":"3. Commit the Container as a New Image with an Entry Point","title":"Docker-instructions","text":"scripts ready, commit running container new image set new entry point run bash script automatically:","code":"docker commit \\     --change='CMD [\"/bin/bash\", \"/home/rstudio/run_analysis.sh\"]' \\     <container_id> \\     thomasrauter/splineomics-analysis:v1"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"push-the-new-image-to-docker-hub","dir":"Articles","previous_headings":"Creating a Reproducible Docker Container with Automated Analysis","what":"4. Push the New Image to Docker Hub","title":"Docker-instructions","text":"Push new image Docker Hub others can easily pull reproduce analysis: Others can pull (download) container command:","code":"docker push thomasrauter/splineomics-analysis:v1 docker pull thomasrauter/splineomics-analysis:v1"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"running-the-container-to-reproduce-the-results","dir":"Articles","previous_headings":"Creating a Reproducible Docker Container with Automated Analysis","what":"5. Running the container to reproduce the results","title":"Docker-instructions","text":"reproduce results, need create local directory results saved mount directory container’s /home/rstudio/output/ directory. Use following command run container ensure results saved local output directory (see commands section Running Docker Container mount output dir current working dir).","code":"docker run -it \\     -v /path/to/local/output:/home/rstudio/output \\     thomasrauter/splineomics-analysis:v1"},{"path":"https://csbg.github.io/SplineOmics/articles/Docker-instructions.html","id":"optional-getting-insights-into-the-full-analysis","dir":"Articles","previous_headings":"Creating a Reproducible Docker Container with Automated Analysis","what":"(Optional) Getting insights into the full analysis","title":"Docker-instructions","text":"Start new container mount empty local directory /home/rstudio/ directory inside container. allows directly access analysis files local machine.","code":"docker run -it \\     -v /path/to/local/dir:/home/rstudio \\     thomasrauter/splineomics-analysis:v1"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"about-this-vignette","dir":"Articles","previous_headings":"","what":"About this vignette","title":"RNA-seq analysis","text":"tutorial intends showcase explain capabilities SplineOmics package walking real complete RNA-seq example, start finish. SplineOmics explained detail get-started vignette, proteomics example covered. vignette focused showing RNA-seq data can used, , less details overall package provided .","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"data-overview","dir":"Articles","previous_headings":"About this vignette","what":"Data Overview","title":"RNA-seq analysis","text":"dataset originates time-series RNA-seq experiment designed study Chinese Hamster Ovary (CHO) cells. experiment involved cultivating cells eight bioreactors, four bioreactors subjected temperature shift 146 hours (experimental condition) remaining four bioreactors maintained without temperature shift (control condition). Samples collected 17 distinct time points throughout experiment, specifically: \"72h\", \"76h\", \"96h\", \"120h\", \"124h\", \"144h\", \"148h\", \"152h\", \"168h\", \"192h\", \"216h\", \"220h\", \"240h\", \"264h\", \"268h\", \"288h\", \"312h\" cultivation start. time point sampled eight bioreactors, resulting total 136 samples. two batch effects: Reactor Plate. Different bioreactors, cells cultivated, can show big variablity. Plate refers two different plates used RNA-seq analysis samples. fully random design used distribute samples two plates. vignette, just remove plate batch effect. data matrix comprises genes rows samples columns, providing gene expression measurements time points. sample initially sequenced three technical replicates across two NovaSeq X flow cells. technical replicates collapsed generate final dataset used analysis. goal experiment investigate effect temperature shift CHO cell cultivation gene expression dynamics time. Note: original dataset, yet published time vignette’s creation. demonstration purposes, genes randomly shuffled, subset data included reduce dataset size.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"analysis-goals","dir":"Articles","previous_headings":"About this vignette","what":"Analysis Goals","title":"RNA-seq analysis","text":"main objectives analysis : Identify genes significant temporal changes: Among thousands genes measured, goal identify exhibit significant changes expression time. Cluster genes based temporal patterns: Genes showing significant temporal changes (hits) grouped clusters based time-dependent expression patterns. Perform gene set enrichment analysis: cluster, gene set enrichment analysis conducted identify whether specific biological pathways processes - downregulated response feeding processes influenced temperature shift. Assess impact temperature shifts temporal patterns: analysis determine whether temporal patterns gene expression affected temperature shift, .e., whether gene expression dynamics differ time temperature shift conditions compared controls.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"load-the-packages","dir":"Articles","previous_headings":"","what":"Load the packages","title":"RNA-seq analysis","text":"","code":"library(SplineOmics) #> Warning: replacing previous import 'limma::topTable' by #> 'variancePartition::topTable' when loading 'SplineOmics' library(readr) # For reading the meta CSV file library(here)  # For managing filepaths #> here() starts at /tmp/RtmpLm9rTd library(dplyr) # For data manipulation #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(knitr) # For Showing the head of the data and the meta tables."},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"load-the-files","dir":"Articles","previous_headings":"","what":"Load the files","title":"RNA-seq analysis","text":"","code":"data <- readRDS(xzfile(system.file(   \"extdata\",   \"rna_seq_data.rds.xz\",   package = \"SplineOmics\" )))  meta <- readr::read_csv(   system.file(     \"extdata\",     \"rna_seq_meta.csv\",     package = \"SplineOmics\"   ),   show_col_types = FALSE )"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"show-top-rows-of-data","dir":"Articles","previous_headings":"Load the files","what":"Show top rows of data","title":"RNA-seq analysis","text":"data: numeric matrix row represents gene (features) column corresponds sample. row names matrix contain gene identifiers, columns aligned sample metadata meta. matrix contains expression values 136 samples. Note study conducted blinded manner, samples randomly distributed across two plates RNA-seq analysis. result, sample numbers (e.g., 1, 2, 3, etc.) sequential order respect time, condition, plate. data analysis involving splines time, essential sort samples based time establish valid temporal sequence. Additionally, organizing data way improves clarity ensures consistency. Within time point, samples sorted condition (e.g., constant temp_shift) , subsequently, plate (e.g., plate_1 plate_2).","code":"kable(   head(data),   format = \"markdown\"   )"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"show-top-rows-of-meta","dir":"Articles","previous_headings":"Load the files","what":"Show top rows of meta","title":"RNA-seq analysis","text":"meta: data frame containing metadata information samples data. row meta corresponds column data, ensuring 1:1 alignment metadata entries expression data samples. columns meta describe various attributes samples, SampleNr, Reactor, Time, Condition, Plate.","code":"kable(   head(meta),   format = \"markdown\"   )"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"preprocess-the-data","dir":"Articles","previous_headings":"","what":"Preprocess the data","title":"RNA-seq analysis","text":"Filter data rows (genes) zero counts across samples. step standard preprocessing procedure RNA-seq data analysis, genes zero counts samples provide information downstream analyses.","code":"rows_before <- nrow(data)  # Filter data rows data <- data[rowSums(data) > 0, ]  rows_after <- nrow(data) rows_removed <- rows_before - rows_after  cat(sprintf(   \"Rows before filtering: %d\\nRows after filtering: %d\\nRows removed: %d\\n\",    rows_before,   rows_after,   rows_removed   )) #> Rows before filtering: 1000 #> Rows after filtering: 944 #> Rows removed: 56"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"perform-eda-exploratory-data-analysis","dir":"Articles","previous_headings":"","what":"Perform EDA (exploratory data analysis)","title":"RNA-seq analysis","text":"can see HTML report explore_data() function batch-corrected data, report batch-corrected data.","code":"report_info <- list(   omics_data_type = \"RNA\",   data_description = \"RNA-seq data of CHO cells\",   data_collection_date = \"December 2024\",   analyst_name = \"Thomas Rauter\",   contact_info = \"thomas.rauter@plus.ac.at\",   project_name = \"DGTX\" )  report_dir <- here::here(   \"results\",   \"explore_data\" ) splineomics <- SplineOmics::create_splineomics(   data = data,   meta = meta,   report_info = report_info,   condition = \"Condition\",    # Column of meta that contains the levels.   meta_batch_column = \"Plate\" # Remove batch effect for plotting. ) plots <- SplineOmics::explore_data(   splineomics = splineomics,    report_dir = report_dir )"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"run-limma-spline-analysis","dir":"Articles","previous_headings":"","what":"Run limma spline analysis","title":"RNA-seq analysis","text":"example, skipping finding best hyperparameters screen_limma_hyperparams() function, already clear idea use. can customize normalization method providing specific normalization function normalize_func argument preprocess_rna_seq_data() function. details use feature, please refer function documentation available ‘References’ website. Additionally, use preprocess_rna_seq_data() optional RNA-seq data. Alternatively, can use limma::voom function directly pass resulting voom object rna_seq_data argument create_splineomics() update_splineomics(). Alongside , must pass $E data matrix data argument. general, long data argument contains actual data matrix rna_seq_data argument contains object compatible limma, data correctly processed. Run run_limma_splines() function updated SplineOmics object: output function run_limma_splines() named list, element specific “category” results. Refer document explanation different result categories. elements list, containing elements respective limma topTables, either level comparison two levels. element “time_effect” list, element topTable p-value feature respective level reported. element “avrg_diff_conditions” list contains elements topTables, represent comparison average differences levels. element “interaction_condition_time” list contains elements topTables, represent interaction levels (includes time average differences)","code":"spline_params = list(   spline_type = c(\"n\"),    # natural cubic splines   dof = c(3L)              # Degree of freedom of 2 for the splines. )  voom_obj <- preprocess_rna_seq_data(   raw_counts = data,   meta = meta,   spline_params = spline_params,   design = \"~ 1 + Condition*X + Plate\" ) #> Preprocessing RNA-seq data (normalization + voom)...  data <- voom_obj$E splineomics <- SplineOmics::update_splineomics(   splineomics = splineomics,   data = data,   rna_seq_data = voom_obj,   design = \"~ 1 + Condition*X + Plate\",    mode = \"integrated\", # means limma uses the full data for each condition.   spline_params = spline_params ) splineomics <- SplineOmics::run_limma_splines(   splineomics = splineomics ) #> Hint: The data contains negative values. This may occur if the data has been transformed (e.g., log-transformed or normalized) and is valid in such cases. Ensure that the data preprocessing  aligns with your analysis requirements. #> Column 'Plate' of meta will be used to remove the batch effect for the plotting #> Make sure that the design formula contains no interaction between the condition and time (X) for mode == isolated, and that it contains an interaction for mode == integrated. Otherwise, you will get an uncaught error of 'coefficients not estimable' or 'subscript out of bounds'. #> Info limma spline analysis completed successfully"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"build-limma-report","dir":"Articles","previous_headings":"","what":"Build limma report","title":"RNA-seq analysis","text":"topTables three limma result categories can used generate p-value histograms volcano plots. can view generated analysis report create_limma_report function .","code":"report_dir <- here::here(   \"results\",   \"limma_reports\" )  plots <- SplineOmics::create_limma_report(   splineomics = splineomics,   report_dir = report_dir )"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"cluster-the-hits-significant-features","dir":"Articles","previous_headings":"","what":"Cluster the hits (significant features)","title":"RNA-seq analysis","text":"obtained limma spline results, can cluster hits based temporal pattern (spline shape). define hit setting adj. p-value threshold every level. Hits features (genes ) adj. p-value threshold. Hierarchical clustering used place every hit one many clusters specified specific level. Note dataset, vast amount hits. useful thousands individual plots, also takes long time compute resulting HTML large size, want limit hits plotted. several options: Use low adjusted p-value: approach filters significant features (genes) proceeding analysis visualization. Access customize data: Modify dataframes inside SplineOmics object removing selected set features (genes) plotting. Optimize clustering without generating report: Set report argument cluster_hits() function FALSE (default TRUE). skips generation HTML report, significantly speeding computation omitting creation export plots. can view generated analysis report cluster_hits function . discussed , three limma result categories. cluster_hits() report shows results three, present (category 2 3 can generated design formula contains interaction effect).","code":"# Note: The low adj. p-values are to have less results, so that the HTML report # is smaller in file size. adj_pthresholds <- c( # 0.05 for both levels   0.0000001, # constant (temperature)    0.00001   0.0000001  # temp_shift )  clusters <- c(   4L,  # 4 clusters for constant   4L   # 4 clusters for temp_shift )  report_dir <- here::here(   \"results\",   \"clustering_reports\" )  # Note: The treatment_labels and treatment_timepoints variable can be defined # much simpler for this experiment, because all plots should have the same  # treatment line (it can be done like shown by the commented out arguments of # plot_info below). The reason why this is done in the explicit way here is to # show how it is possible to potentially have different treatment lines for the # \"double spline\" plots (the ones that compare limma result category 2 and 3).  # constant_temp_shift is the first condition of the double spline plot and the # second condition separated by an underscore (it must be exactly like this, # otherwise it does not work. The first condition is always the one that occurs # first from the top in the respective meta column). treatment_labels = list(   constant = \"temp shift\",    temp_shift = \"temp shift\",     constant_temp_shift = \"temp shift\"    )  treatment_timepoints = list(   constant = 146,   temp_shift = 146,     constant_temp_shift = 146   )  plot_info <- list( # For the spline plots   y_axis_label = \"log2 intensity\",   time_unit = \"min\", # our measurements were in minutes   # treatment_labels = list(\"temp shift\"), # add this for all conditions   # treatment_timepoints = list(146)       # temp shift was at 146 hours.   treatment_labels = treatment_labels,   treatment_timepoints = treatment_timepoints )  genes <- rownames(data)  plot_options <- list(   # When meta_replicate_column is not there, all datapoints are blue.   meta_replicate_column = \"Reactor\" # Colors the data points based on Reactor )  clustering_results <- SplineOmics::cluster_hits(   splineomics = splineomics,   adj_pthresholds = adj_pthresholds,   clusters = clusters,   genes = genes,   plot_info = plot_info,   plot_options = plot_options,   report_dir = report_dir,   adj_pthresh_avrg_diff_conditions = 0.0000001,   adj_pthresh_interaction_condition_time = 0.0000001 )"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"perform-gene-set-enrichment-analysis-gsea","dir":"Articles","previous_headings":"","what":"Perform gene set enrichment analysis (GSEA)","title":"RNA-seq analysis","text":"clustered hits identified, subsequent step gain biological insights perform GSEA. , respective genes can assigned clustered hit, GSEA can carried . proceed, Enrichr databases choice need downloaded: Per default file placed current working directory, root dir R project. run GSEA, downloaded database file loaded dataframe. , optionally, clusterProfiler parameters report dir can specified. function create_gsea_report() runs GSEA using clusterProfiler, generates HTML report returns GSEA dotplots R. function runs clusterProfiler clusters levels, generates HTML report: can view generated analysis report run_gsea function .","code":"# Specify which databases you want to download from Enrichr gene_set_lib <- c(   \"WikiPathways_2019_Human\",   \"NCI-Nature_2016\",   \"TRRUST_Transcription_Factors_2019\",   \"MSigDB_Hallmark_2020\",   \"GO_Cellular_Component_2018\",   \"CORUM\",   \"KEGG_2019_Human\",   \"TRANSFAC_and_JASPAR_PWMs\",   \"ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X\",   \"GO_Biological_Process_2018\",   \"GO_Molecular_Function_2018\",   \"Human_Gene_Atlas\" )  SplineOmics::download_enrichr_databases(   gene_set_lib = gene_set_lib,   output_dir = here::here(),   # output into the current working dir (default)   filename = \"databases.tsv\"   # just the name of the file, not the full path ) # Specify the filepath of the TSV file with the database info downloaded_dbs_filepath <- here::here(   \"databases.tsv\"   )  # Load the file databases <- read.delim(   downloaded_dbs_filepath,   sep = \"\\t\",   stringsAsFactors = FALSE )  # Specify the clusterProfiler parameters clusterProfiler_params <- list(   pvalueCutoff = 0.05,   pAdjustMethod = \"BH\",   minGSSize = 10,   maxGSSize = 500,   qvalueCutoff = 0.2 )  report_dir <- here::here(   \"results\",   \"gsea_reports\" ) result <- SplineOmics::run_gsea(   # A dataframe with three columns: feature, cluster, and gene. Feature contains   # the integer index of the feature, cluster the integer specifying the cluster   # number, and gene the string of the gene, such as \"CLSTN2\".   levels_clustered_hits = clustering_results$clustered_hits_levels,   databases = databases,   clusterProfiler_params = clusterProfiler_params,   report_info = report_info,   report_dir = report_dir )"},{"path":"https://csbg.github.io/SplineOmics/articles/RNA-seq analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"RNA-seq analysis","text":"","code":"#> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/local/R-4.3.3/lib/R/lib/libRblas.so  #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=de_AT.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=de_AT.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=de_AT.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=de_AT.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Europe/Vienna #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices datasets  utils     methods   base      #>  #> other attached packages: #> [1] knitr_1.48        dplyr_1.1.4       here_1.0.1        readr_2.1.5       #> [5] SplineOmics_0.1.0 #>  #> loaded via a namespace (and not attached): #>   [1] RColorBrewer_1.1-3       rstudioapi_0.16.0        jsonlite_1.8.9           #>   [4] shape_1.4.6.1            magrittr_2.0.3           farver_2.1.2             #>   [7] nloptr_2.1.1             rmarkdown_2.28           GlobalOptions_0.1.2      #>  [10] fs_1.6.4                 ragg_1.3.3               vctrs_0.6.5              #>  [13] minqa_1.2.8              base64enc_0.1-3          htmltools_0.5.8.1        #>  [16] progress_1.2.3           broom_1.0.7              variancePartition_1.32.5 #>  [19] sass_0.4.9               KernSmooth_2.23-22       bslib_0.8.0              #>  [22] htmlwidgets_1.6.4        desc_1.4.3               pbkrtest_0.5.3           #>  [25] plyr_1.8.9               cachem_1.1.0             lifecycle_1.0.4          #>  [28] iterators_1.0.14         pkgconfig_2.0.3          Matrix_1.6-5             #>  [31] R6_2.5.1                 fastmap_1.2.0            rbibutils_2.3            #>  [34] clue_0.3-65              digest_0.6.37            numDeriv_2016.8-1.1      #>  [37] colorspace_2.1-1         patchwork_1.3.0          S4Vectors_0.40.2         #>  [40] rprojroot_2.0.4          textshaping_0.4.0        fansi_1.0.6              #>  [43] compiler_4.3.3           withr_3.0.1              bit64_4.5.2              #>  [46] aod_1.3.3                doParallel_1.0.17        backports_1.5.0          #>  [49] BiocParallel_1.36.0      viridis_0.6.5            dendextend_1.18.0        #>  [52] gplots_3.2.0             MASS_7.3-60.0.1          rjson_0.2.23             #>  [55] corpcor_1.6.10           gtools_3.9.5             caTools_1.18.3           #>  [58] tools_4.3.3              zip_2.3.1                remaCor_0.0.18           #>  [61] glue_1.8.0               nlme_3.1-164             grid_4.3.3               #>  [64] cluster_2.1.6            reshape2_1.4.4           generics_0.1.3           #>  [67] gtable_0.3.5             tzdb_0.4.0               tidyr_1.3.1              #>  [70] hms_1.1.3                utf8_1.2.4               BiocGenerics_0.48.1      #>  [73] ggrepel_0.9.6            foreach_1.5.2            pillar_1.9.0             #>  [76] stringr_1.5.1            vroom_1.6.5              limma_3.58.1             #>  [79] circlize_0.4.16          splines_4.3.3            lattice_0.22-5           #>  [82] renv_1.0.10              bit_4.5.0                tidyselect_1.2.1         #>  [85] locfit_1.5-9.10          ComplexHeatmap_2.18.0    gridExtra_2.3            #>  [88] IRanges_2.36.0           edgeR_4.0.16             svglite_2.1.3            #>  [91] RhpcBLASctl_0.23-42      stats4_4.3.3             xfun_0.48                #>  [94] Biobase_2.62.0           statmod_1.5.0            matrixStats_1.4.1        #>  [97] pheatmap_1.0.12          stringi_1.8.4            yaml_2.3.10              #> [100] boot_1.3-29              evaluate_1.0.0           codetools_0.2-19         #> [103] tibble_3.2.1             BiocManager_1.30.25      cli_3.6.3                #> [106] systemfonts_1.1.0        Rdpack_2.6.1             munsell_0.5.1            #> [109] jquerylib_0.1.4          Rcpp_1.0.13              EnvStats_3.0.0           #> [112] png_0.1-8                parallel_4.3.3           pkgdown_2.1.1            #> [115] ggplot2_3.5.1            prettyunits_1.2.0        bitops_1.0-9             #> [118] lme4_1.1-35.5            viridisLite_0.4.2        mvtnorm_1.3-1            #> [121] lmerTest_3.1-3           scales_1.3.0             openxlsx_4.2.7.1         #> [124] purrr_1.0.2              crayon_1.5.3             fANCOVA_0.6-1            #> [127] GetoptLong_1.0.5         rlang_1.1.4"},{"path":"https://csbg.github.io/SplineOmics/articles/design_limma_design_formula.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Designing a Limma Design Formula","text":"limma package powerful tool analyzing gene expression data, particularly context microarrays RNA-seq. critical part limma analysis design formula, specifies experimental conditions contrasts interested . vignette provides guide construct limma design formula correctly, examples best practices.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/design_limma_design_formula.html","id":"understanding-the-design-matrix","dir":"Articles","previous_headings":"","what":"Understanding the Design Matrix","title":"Designing a Limma Design Formula","text":"design matrix crucial component differential expression analysis using limma. defines relationships samples experimental conditions (factors) investigation. well-constructed design matrix allows limma correctly model effects factors estimate differential expression.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/design_limma_design_formula.html","id":"basic-design-formula","dir":"Articles","previous_headings":"Understanding the Design Matrix","what":"Basic Design Formula","title":"Designing a Limma Design Formula","text":"simplest form, design formula includes one factor, treatment vs. control. experiment involves comparing two conditions (e.g., treated vs. untreated), can create design formula like : , condition factor variable metadata (meta) represents experimental groups. Important Points: ~ 0 + condition syntax tells R create design matrix without intercept (.e., matrix level factor condition represented column). approach helpful want make direct comparisons conditions. Including Multiple Factors experiment includes one factor, time points treatments, can include design formula: formula assumes effects treatment time additive (interaction). suspect interaction treatment time might important, can include interaction term: Interaction Term: treatment * time term includes main effects treatment time interaction. Blocking Factors experiments, might technical biological replicates, blocking factors (e.g., batch effects). can include blocking factors design formula: formula accounts treatment batch effects, ensuring analysis confounded batch effects.","code":"design <- model.matrix(~ 0 + condition, data = meta) design <- model.matrix(~ 0 + treatment + time, data = meta) design <- model.matrix(~ 0 + treatment * time, data = meta) design <- model.matrix(~ 0 + treatment + batch, data = meta)"},{"path":"https://csbg.github.io/SplineOmics/articles/design_limma_design_formula.html","id":"creating-contrasts","dir":"Articles","previous_headings":"","what":"Creating Contrasts","title":"Designing a Limma Design Formula","text":"defining design matrix, likely want make specific comparisons conditions. contrasts come . example, compare treated vs. untreated, can define contrast matrix:","code":"contrast <- makeContrasts(   treated_vs_untreated = treatmenttreated - treatmentuntreated,   levels = design )"},{"path":"https://csbg.github.io/SplineOmics/articles/design_limma_design_formula.html","id":"practical-example","dir":"Articles","previous_headings":"","what":"Practical Example","title":"Designing a Limma Design Formula","text":"Let’s say experiment two treatments (B) two time points (early late). metadata might look like : design formula : contrast compare treatment early time point treatment B late time point :","code":"meta <- data.frame(   sample = c(\"S1\", \"S2\", \"S3\", \"S4\"),   treatment = factor(c(\"A\", \"A\", \"B\", \"B\")),   time = factor(c(\"early\", \"late\", \"early\", \"late\")) ) design <- model.matrix(~ 0 + treatment * time, data = meta) contrast <- makeContrasts(   A_early_vs_B_late = (treatmentA:timeearly) - (treatmentB:timelate),   levels = design )"},{"path":"https://csbg.github.io/SplineOmics/articles/design_limma_design_formula.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Designing a Limma Design Formula","text":"Starting ~ 0 means intercept (.e., including baseline group model). Starting ~ 1 (just ~) includes intercept (baseline group). Factors separated + indicate additive effects. example, ~ 0 + factor1 + factor2 means modeling effects factor1 factor2 additively, without considering interactions. * symbol used model interactions factors. example, ~ 0 + factor1 * factor2 include factor1, factor2, interaction (factor1:factor2). Alternatively, can specify interaction explicitly :. example, ~ 0 + factor1 + factor2 + factor1:factor2 equivalent ~ 0 + factor1 * factor2.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/design_limma_design_formula.html","id":"some-examples","dir":"Articles","previous_headings":"Summary","what":"Some examples:","title":"Designing a Limma Design Formula","text":"~ 0 + factor1 + factor2: Additive model without intercept. ~ 1 + factor1 + factor2: Additive model intercept. ~ 0 + factor1 * factor2: Model main effects interaction, intercept. ~ 1 + factor1 * factor2: Model intercept, main effects, interaction.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/design_limma_design_formula.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Designing a Limma Design Formula","text":"","code":"## R version 4.3.3 (2024-02-29) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.5 LTS ##  ## Matrix products: default ## BLAS:   /usr/local/R-4.3.3/lib/R/lib/libRblas.so  ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=de_AT.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=de_AT.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=de_AT.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=de_AT.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Europe/Vienna ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices datasets  utils     methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37       desc_1.4.3          R6_2.5.1            ##  [4] fastmap_1.2.0       xfun_0.48           cachem_1.1.0        ##  [7] knitr_1.48          htmltools_0.5.8.1   rmarkdown_2.28      ## [10] lifecycle_1.0.4     cli_3.6.3           sass_0.4.9          ## [13] pkgdown_2.1.1       textshaping_0.4.0   jquerylib_0.1.4     ## [16] renv_1.0.10         systemfonts_1.1.0   compiler_4.3.3      ## [19] rstudioapi_0.16.0   tools_4.3.3         ragg_1.3.3          ## [22] bslib_0.8.0         evaluate_1.0.0      yaml_2.3.10         ## [25] BiocManager_1.30.25 jsonlite_1.8.9      htmlwidgets_1.6.4   ## [28] rlang_1.1.4         fs_1.6.4"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"about-this-tutorial","dir":"Articles","previous_headings":"","what":"About this tutorial","title":"get-started","text":"tutorial intends showcase explain capabilities SplineOmics package walking real complete example, start finish.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"example-overview","dir":"Articles","previous_headings":"About this tutorial","what":"Example Overview","title":"get-started","text":"example involves time-series proteomics experiment, CHO (chinese hamster ovary) cells cultivated three bioreactors (three biological replicates). experiment includes following setup: Samples taken exponential stationary growth phases. 60 minutes feeding 15, 60, 90, 120, 240 minutes feeding","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"analysis-goals","dir":"Articles","previous_headings":"About this tutorial","what":"Analysis Goals","title":"get-started","text":"main goals analysis : Identify proteins significant temporal changes: 7162 cellular proteins, objective detect proteins show significant change time CHO cells fed (.e., impact feeding). Cluster hits based temporal patterns: proteins (hits) significant temporal changes clustered according time-based patterns. Perform gene set enrichment analysis: cluster, gene set enrichment analysis performed determine specific biological processes - downregulated feeding.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"note","dir":"Articles","previous_headings":"About this tutorial","what":"Note","title":"get-started","text":"documentation SplineOmics package functions can viewed ","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"load-the-packages","dir":"Articles","previous_headings":"","what":"Load the packages","title":"get-started","text":"","code":"library(SplineOmics) #> Warning: replacing previous import 'limma::topTable' by #> 'variancePartition::topTable' when loading 'SplineOmics' library(readxl) # for loading Excel files library(here) # For managing filepaths #> here() starts at /home/thomas/Documents/PhD/projects/DGTX/SplineOmics_hub/SplineOmics library(dplyr) # For data manipulation #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"load-the-files","dir":"Articles","previous_headings":"","what":"Load the files","title":"get-started","text":"example, proteomics_data.rds file contains numeric values (intensities) also feature descriptions, gene protein name (= annotation part). Usually, load data example Excel file, .rds file compressed, reason format chosen limit size SplineOmics package. file meta.xlsx contains meta information, descriptions columns numeric values data. (example files part package don’t present system). Please note dataset actual experimental dataset, annotation information, gene names, removed since yet published time making SplineOmics package public. Instead, dataset includes randomly generated gene symbols gene names corresponding Cricetulus griseus (Chinese Hamster) row. intended demonstrate functionality package. left part data contains numeric values, right part annotation info, can copied separate dataframe, shown . Three comments characteristics input data : data must contain NA values special values, must consist numbers. example, original proteomics data contained NA values, resolved case imputation (replacing NA values numbers). features data ideally normally distributed analyzed limma, fits linear model feature. models rely statistical tests assume normality. Although limma can still function data normally distributed, resulting p-values may become less reliable. reason, strongly recommended transform data using techniques log2 transformation features deviate normality. Proper transformation helps ensure assumptions underlying statistical tests met, leading accurate trustworthy results. samples data independent . Linear models, used limma, assume observations (samples) independent. dependency samples (e.g., repeated measurements subject), assumption violated, can lead incorrect statistical inferences.","code":"data <- readRDS(xzfile(system.file(   \"extdata\",   \"proteomics_data.rds.xz\",   package = \"SplineOmics\" )))   meta <- read_excel(   system.file(     \"extdata\",     \"proteomics_meta.xlsx\",     package = \"SplineOmics\"   ) )  # Extract the annotation part from the dataframe. first_na_col <- which(is.na(data[1, ]))[1] annotation <- data |>   dplyr::select((first_na_col + 1):ncol(data)) |>   dplyr::slice(-c(1:3))  print(head(data)) #> # A tibble: 6 × 40 #>   `Sample ID`  `1`   `2`   `3`   `4`   `5`   `6`   `7`   `8`   `9`   `10`  `11`  #>   <chr>        <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 Reactor      E09   E10   E12   E09   E10   E12   E09   E10   E12   E09   E10   #> 2 Time Point   TP01  TP01  TP01  TP02  TP02  TP02  TP03  TP03  TP03  TP04  TP04  #> 3 Phase of Fe… Expo… Expo… Expo… Expo… Expo… Expo… Expo… Expo… Expo… Expo… Expo… #> 4 NA           15.2… 15.2… 15.3… 15.1… 15.2… 15.0… 15.2… 15.2… 15.2… 15.1… 15.2… #> 5 NA           15.0… 15.1… 15.2… 15.1… 15.1… 15.2… 15.2… 15.3… 15.2… 15.1… 15.1… #> 6 NA           14.5… 14.7… 14.6… 14.5… 14.6… 14.6… 14.5… 14.6… 14.7… 14.5… 14.6… #> # ℹ 28 more variables: `12` <chr>, `13` <chr>, `14` <chr>, `15` <chr>, #> #   `16` <chr>, `17` <chr>, `18` <chr>, `19` <chr>, `20` <chr>, `21` <chr>, #> #   `22` <chr>, `23` <chr>, `24` <chr>, `25` <chr>, `26` <chr>, `27` <chr>, #> #   `28` <chr>, `29` <chr>, `30` <chr>, `31` <chr>, `32` <chr>, `33` <chr>, #> #   `34` <chr>, `35` <chr>, `36` <chr>, ...38 <lgl>, Gene_symbol <chr>, #> #   Gene_name <chr> print(meta) #> # A tibble: 36 × 5 #>    Sample.ID            Reactor Time.Point Phase        Time #>    <chr>                <chr>   <chr>      <chr>       <dbl> #>  1 E09_TP01_Exponential E09     TP01       Exponential   -60 #>  2 E10_TP01_Exponential E10     TP01       Exponential   -60 #>  3 E12_TP01_Exponential E12     TP01       Exponential   -60 #>  4 E09_TP02_Exponential E09     TP02       Exponential    15 #>  5 E10_TP02_Exponential E10     TP02       Exponential    15 #>  6 E12_TP02_Exponential E12     TP02       Exponential    15 #>  7 E09_TP03_Exponential E09     TP03       Exponential    60 #>  8 E10_TP03_Exponential E10     TP03       Exponential    60 #>  9 E12_TP03_Exponential E12     TP03       Exponential    60 #> 10 E09_TP04_Exponential E09     TP04       Exponential    90 #> # ℹ 26 more rows print(annotation) #> # A tibble: 4,162 × 2 #>    Gene_symbol  Gene_name                                               #>    <chr>        <chr>                                                   #>  1 LOC113838844 cone-rod homeobox protein-like                          #>  2 Wdr83os      WD repeat domain 83 opposite strand                     #>  3 Cubn         cubilin                                                 #>  4 Dynlt1       dynein light chain Tctex-type 1                         #>  5 Ostc         oligosaccharyltransferase complex non-catalytic subunit #>  6 Unc5cl       unc-5 family C-terminal like                            #>  7 Cfl1         cofilin 1                                               #>  8 LOC100752202 HEN methyltransferase 1                                 #>  9 LOC100755162 acyl-coenzyme A synthetase ACSM5, mitochondrial         #> 10 LOC100768921 40S ribosomal protein S21                               #> # ℹ 4,152 more rows"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"bring-the-inputs-into-the-standardized-format","dir":"Articles","previous_headings":"Load the files","what":"Bring the Inputs into the Standardized Format","title":"get-started","text":"Since data format required SplineOmics package, needs processing. SplineOmics package requires data numeric matrix, element allowed anything else number. can done commands R, file specific structure, function extract_data() can handle automatically.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"file-structure-requirements","dir":"Articles","previous_headings":"Load the files > Bring the Inputs into the Standardized Format","what":"File Structure Requirements","title":"get-started","text":"file looks like one used , : data matrix field left annotation info right fields separated one empty column","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"usage-of-the-extract_data-function","dir":"Articles","previous_headings":"Load the files > Bring the Inputs into the Standardized Format","what":"Usage of the extract_data() function","title":"get-started","text":", extract_data() can: Identify data matrix field return numeric matrix. Create column headers information written cells respective columns data matrix field. annotation columns specified, rowheaders increasing numbers. annotation columns specified (like \"First.Protein.Description\" \"ID\" example), combined form rowheaders (feature names).","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"usage-in-plotting","dir":"Articles","previous_headings":"Load the files > Bring the Inputs into the Standardized Format","what":"Usage in Plotting","title":"get-started","text":"generated rowheaders used label plots feature shown individually, : Spline plots datapoints individual feature.","code":"data <- SplineOmics::extract_data(   # The dataframe with the numbers on the left and info on the right.   data = data,   # Use this annotation column for the feature names.   feature_name_columns = c(\"Gene_name\"),   # When TRUE, you must confirm that data is in the required format.   user_prompt = FALSE )"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"perform-eda-exploratory-data-analysis","dir":"Articles","previous_headings":"","what":"Perform EDA (exploratory data analysis)","title":"get-started","text":"Now data required format (numeric matrix) can go . first step analyzing data typically Exploratory Data Analysis (EDA). EDA involves summarizing main characteristics data, often visualizations.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"common-eda-plots","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis)","what":"Common EDA Plots","title":"get-started","text":"common types EDA plots include: Density distributions Boxplots PCA (Principal Component Analysis) Correlation heatmaps , can generate plots lines R code. However, prefer, convenience, explore_data() function can handle .","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"using-explore_data-for-eda","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis)","what":"Using explore_data() for EDA","title":"get-started","text":"SplineOmics package provides function explore_data() perform EDA. function requires following arguments: data: numeric data matrix. meta: metadata table. condition: name column metadata contains levels experiment (e.g., “Exponential” “Stationary”). report_info: list contains general information analysis, name analyst datatype (e.g. proteomics)","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"optional-arguments","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis)","what":"Optional Arguments","title":"get-started","text":"addition required arguments, explore_data() offers several optional arguments: meta_batch_column: name column contains first batch effect. meta_batch2_column: name column contains second batch effect. least one batch column provided, function : Use removeBatchEffect() function limma remove batch effect data plotting. Generate two EDA HTML reports: one uncorrected data one batch-corrected data.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"output-and-report-options","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis)","what":"Output and Report Options","title":"get-started","text":"default, reports saved current working directory, location can changed using report_dir argument. function also returns plots generated analysis, can modify according needs. want report generated, can set report argument FALSE (example just want figures R environment)","code":"# Those fields are mandatory, because we believe that when such a report is # opened after half a year, those infos can be very helpful. report_info <- list(   omics_data_type = \"PTX\",   data_description = \"Proteomics data of CHO cells\",   data_collection_date = \"February 2024\",   analyst_name = \"Thomas Rauter\",   contact_info = \"thomas.rauter@plus.ac.at\",   project_name = \"DGTX\" )  report_dir <- here::here(   \"results\",   \"explore_data\" )"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"splineomics-object","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis)","what":"SplineOmics Object","title":"get-started","text":"SplineOmics package, multiple functions take arguments input. make easier avoid errors, decided arguments provided individually functions, stored R6 object (type ‘SplineOmics’) object passed functions. Additionally, functions generate intermediate output, just necessary next function workflow, also just passed along updating SplineOmics object. don’t worry .","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"functionality","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis) > SplineOmics Object","what":"Functionality","title":"get-started","text":"SplineOmics object can seen container necessary arguments stored. function retrieves required arguments object potentially adds new data results back .","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"documentation","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis) > SplineOmics Object","what":"Documentation","title":"get-started","text":"documentation function creates SplineOmics object can found documentation function updates [documentation function takes SplineOmics object input specifies arguments must present SplineOmics object passed respective function.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"required-arguments-create_splineomics","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis)","what":"Required Arguments create_splineomics()","title":"get-started","text":"data: matrix data meta: Metadata associated data. condition: Meta column name levels (e.g., Exponential Stationary).","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"optional-arguments-create_splineomics","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis)","what":"Optional Arguments create_splineomics()","title":"get-started","text":"rna_seq_data: object containing preprocessed RNA-seq data, output limma::voom function. annotation: dataframe feature descriptions data. report_info: list containing general information analysis. meta_batch_column: Column meta batch information. meta_batch2_column: Column secondary meta batch information. design: limma design formula spline_params: Parameters spline functions. Now SplineOmics object defined, can perform exploratory data analysis. can see HTML report explore_data() function batch-corrected data, report batch-corrected data. EDA plots can tell range things. plots HTML report grouped three categories: Distribution Variability Analysis, Time Series Analysis, Dimensionality Reduction Clustering. look correlation heatmaps HTML report, can see samples E12_TP05_Exponential E10_TP10_Stationary stick . Seeing , might want remove data. can test happens , along testing hyperparameter choices influence results, package function screen_limma_hyperparams().","code":"# splineomics now contains the SplineOmics object. splineomics <- SplineOmics::create_splineomics(   data = data,   meta = meta,   annotation = annotation,   report_info = report_info,   condition = \"Phase\", # Column of meta that contains the levels.   meta_batch_column = \"Reactor\" # For batch effect removal )  # Special print.SplineOmics function leads to selective printing print(splineomics) #> data:SplineOmics Object #> ------------------- #> Number of features (rows): 4162  #> Number of samples (columns): 36  #> Meta data columns: 5  #> First few meta columns: #> # A tibble: 3 × 5 #>   Sample.ID            Reactor Time.Point Phase        Time #>   <chr>                <chr>   <chr>      <chr>       <dbl> #> 1 E09_TP01_Exponential E09     TP01       Exponential   -60 #> 2 E10_TP01_Exponential E10     TP01       Exponential   -60 #> 3 E12_TP01_Exponential E12     TP01       Exponential   -60 #> Condition: Phase  #> No RNA-seq data provided. #> Annotation provided with 4162 entries. #> No spline parameters set. #> P-value adjustment method: BH plots <- SplineOmics::explore_data(   splineomics = splineomics, # SplineOmics object   report_dir = report_dir )"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"finding-the-best-hyperparameters","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis)","what":"Finding the Best Hyperparameters","title":"get-started","text":"running limma spline analysis, important find best “hyperparameters”. context, hyperparameters include: Degree freedom (DoF) Different versions data (e.g., outlier removed vs. removed) Different limma design formulas","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"challenge-of-hyperparameter-selection","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis) > Finding the Best Hyperparameters","what":"Challenge of Hyperparameter Selection","title":"get-started","text":"Rationally determining best combination hyperparameters can challenging. rationally, mean deciding upon final hyperparameters without ever testing , just scientific reasoning. much easier just testing seeing actually behave. However, manually selecting combinations can tedious, work systematically, can challenging. solve problem, screen_limma_hyperparams() function written.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"using-screen_limma_hyperparams","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis) > Finding the Best Hyperparameters","what":"Using screen_limma_hyperparams()","title":"get-started","text":"function screen_limma_hyperparams() automates process testing different combinations hyperparameters. ’s works: Specify values: hyperparameter, can specify values want test. Run combinations: function runs limma spline analysis combinations formed hyperparameters ’ve provided semi combinatorial way.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"inner-vs--outer-hyperparameters","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis) > Finding the Best Hyperparameters","what":"Inner vs. Outer Hyperparameters","title":"get-started","text":"Semi combinatorial means every possible combination generated. Instead, inner outer hyperparameters: possible combinations outer hyperparameters generated. version data (outer hyperparameter), combinations inner hyperparameters tested. approach neccessary, otherwise amount combos explode.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"example","dir":"Articles","previous_headings":"Perform EDA (exploratory data analysis) > Finding the Best Hyperparameters","what":"Example","title":"get-started","text":"example, two versions dataset (one full dataset, one outliers removed), versions considered outer hyperparameters. Additionaly, lets say, want test two different limma design formulas, formula 1 2. function test combinations outer hyperparameters compare , results total 6 combinations : Full Dataset Formula 1 vs Full Dataset Formula 2 Full Dataset Formula 1 vs Outliers Removed Dataset Formula 1 Full Dataset Formula 1 vs Outliers Removed Dataset Formula 2 Full Dataset Formula 2 vs Outliers Removed Dataset Formula 1 Full Dataset Formula 2 vs Outliers Removed Dataset Formula 2 Outliers Removed Dataset Formula 1 vs Outliers Removed Dataset Formula 2 Let’s say specified following inner hyperparameters: Spline parameters: Natural cubic splines degree freedom either 2 3. Adjusted p-value threshold: 0.05 0.1. function generate test combinations spline parameters p-value thresholds 4 combos: Combo 1: DoF = 2, threshold = 0.05 DoF = 3, threshold = 0.05 DoF = 2, threshold = 0.1 DoF = 3, threshold = 0.1 Combo 2: DoF = 2, threshold = 0.05 DoF = 3, threshold = 0.05 DoF = 2, threshold = 0.1 DoF = 3, threshold = 0.1 Combo 3: … allows systematically explore different combinations select optimal hyperparameters analysis. example proteomics data: Now specified values hyperparameter want test, can run screen_limma_hyperparams() function. mentioned, function generates report comparison outer hyperparameters, many show . can view example report report contains results comparison “outer” hyperparameters data 1 design (formula) 1 compared data 1 design 2. , combinations “inner” hyperparameters generated (every possible combination specified adj. p-value thresholds spline configs). encoding used reports titles (part output screen_limma_hyperparams function).","code":"data1 <- data meta1 <- meta  # Remove the \"outliers\" data2 <- data[, !(colnames(data) %in% c(   \"E12_TP05_Exponential\",   \"E10_TP10_Stationary\" ) )]  # Adjust meta so that it matches data2 meta2 <- meta[!meta$Sample.ID %in% c(   \"E12_TP05_Exponential\",   \"E10_TP10_Stationary\" ), ]  # As mentioned above, all the values of one hyperparameter are stored # and provided as a list. datas <- list(data1, data2)  # This will be used to describe the versions of the data. datas_descr <- c(   \"full_data\",   \"outliers_removed\" )  metas <- list(meta1, meta2)  # Test two different limma designs designs <- c(   \"~ 1 + Phase*X + Reactor\",   \"~ 1 + X + Reactor\" )  # 'Integrated means' limma will use the full dataset to generate the results for # each condition. 'Isolated' means limma will use only the respective part of # the dataset for each condition. Designs that contain the condition column # (here Phase) must have mode 'integrated', because the full data is needed to # include the different conditions into the design formula. modes <- c(   \"integrated\",   \"isolated\" )  # Specify the meta \"level\" column condition <- \"Phase\"  report_dir <- here::here(   \"results\",   \"hyperparams_screen_reports\" )  # To remove the batch effect meta_batch_column <- \"Reactor\"  # Test out two different p-value thresholds (inner hyperparameter) adj_pthresholds <- c(   0.05,   0.1 )  # Create a dataframe with combinations of spline parameters to test # (every row a combo to test) spline_test_configs <- data.frame(   # 'n' stands for natural cubic splines, b for B-splines.   spline_type = c(\"n\", \"n\", \"b\", \"b\"),   # Degree is not applicable (NA) for natural splines.   degree = c(NA, NA, 2L, 4L),   # Degrees of freedom (DoF) to test.   # Higher dof means spline can fit more complex patterns.   dof = c(2L, 3L, 3L, 4L) )  print(spline_test_configs) #>   spline_type degree dof #> 1           n     NA   2 #> 2           n     NA   3 #> 3           b      2   3 #> 4           b      4   4 SplineOmics::screen_limma_hyperparams(   splineomics = splineomics,   datas = datas,   datas_descr = datas_descr,   metas = metas,   designs = designs,   modes = modes,   spline_test_configs = spline_test_configs,   report_dir = report_dir,   adj_pthresholds = adj_pthresholds, )"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"run-limma-spline-analysis","dir":"Articles","previous_headings":"","what":"Run limma spline analysis","title":"get-started","text":"identified hyperparameters likely best ones, can run limma spline analysis get results. Lets just assume now new parameters, SplineOmics object updated, best analysis. choice depends analysis. example, analysis, natural cubic splines (n) dof two seemed fit data best (overfitting, also underfitting), reason spline parameters chosen. design formula, must specify either ‘isolated’ ‘integrated’. Isolated means limma determines results level using data level. Integrated means limma determines results levels using full dataset (levels). integrated mode, condition column (Phase) must included design. Isolated means limma uses part dataset belongs level obtain results level. generate limma result categories 2 3 () Run run_limma_splines() function updated SplineOmics object: output function run_limma_splines() named list, element specific “category” results. Refer document explanation different result categories. elements list, containing elements respective limma topTables, either level comparison two levels. element “time_effect” list, element topTable p-value feature respective level reported. element “avrg_diff_conditions” list contains elements topTables, represent comparison average differences levels. element “interaction_condition_time” list contains elements topTables, represent interaction levels (includes time average differences)","code":"splineomics <- SplineOmics::update_splineomics(   splineomics = splineomics,   design = \"~ 1 + Phase*X + Reactor\", # best design formula   mode = \"integrated\", # means limma uses the full data for each condition.   data = data2, # data without \"outliers\" was better   meta = meta2,   spline_params = list(     spline_type = c(\"n\"), # natural cubic splines (take these if unsure)     dof = c(2L) # If you are unsure about which dof, start with 2 and increase   ) ) splineomics <- SplineOmics::run_limma_splines(   splineomics = splineomics ) #> Column 'Reactor' of meta will be used to remove the batch effect for the plotting #> Make sure that the design formula contains no interaction between the condition and time (X) for mode == isolated, and that it contains an interaction for mode == integrated. Otherwise, you will get an uncaught error of 'coefficients not estimable' or 'subscript out of bounds'. #> Info limma spline analysis completed successfully"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"build-limma-report","dir":"Articles","previous_headings":"","what":"Build limma report","title":"get-started","text":"topTables three limma result categories can used generate p-value histograms volcano plots. can view generated analysis report create_limma_report function . report contains p-value histograms three limma result categories volcano plot category 2. Embedded file downloadable limma topTables results category 1 mode ‘isolated’ also results category 2 3 mode ‘integrated’. Note upcoming cluster_hits() function report, embedded file contain clustered significant features result category 1.","code":"report_dir <- here::here(   \"results\",   \"create_limma_reports\" )  plots <- SplineOmics::create_limma_report(   splineomics = splineomics,   report_dir = report_dir )"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"cluster-the-hits-significant-features","dir":"Articles","previous_headings":"","what":"Cluster the hits (significant features)","title":"get-started","text":"obtained limma spline results, can cluster hits based temporal pattern (spline shape). define hit setting adj. p-value threshold every level. Hits features (e.g. proteins) adj. p-value threshold. Hierarchical clustering used place every hit one many clusters specified specific level. can view generated analysis report cluster_hits function . discussed , three limma result categories. cluster_hits() report shows results three, present (category 2 3 can generated design formula contains interaction effect).","code":"adj_pthresholds <- c( # 0.05 for both levels   0.05, # exponential   0.05 # stationary )  clusters <- c(   6L, # 6 clusters for the exponential phase level   3L # 3 clusters for the stationary phase level )  report_dir <- here::here(   \"results\",   \"clustering_reports\" )  plot_info <- list( # For the spline plots   y_axis_label = \"log2 intensity\",   time_unit = \"min\", # our measurements were in minutes   treatment_labels = list(\"feeding\"), # add this for all conditions   treatment_timepoints = list(0) # Feeding was at 0 minutes. )  # Like this you can add individual treatment labels to your plots: # treatment_labels = list( #   exponential = \"treatment 1\", # One treatment in exp #   stationary = c(\"treatment 2\", \"treatment 3\"),  # Two treatments in stat #   additional_condition = NA  # No treatment in the hypothetical third condition #   ) # # treatment_timepoints = list( #   exponential = 0, #   stationary = c(100, 140),  # Two treatments also need two timepoints #   additional_condition = NA #   ) # # or set a treatment for ALL conditions (still always make a list): # # treatment_labels = list(\"treatment\") # treatment_timepoints = list(120) # # or set multiple treatments for ALL conditions: # # treatment_labels = list(c(\"treatment1\", \"treatment2\")) # treatment_timepoints = list(c(120, 90))   # Get all the gene names. They are used for generating files # which contents can be directly used as the input for the Enrichr webtool, # if you prefer to manually perform the enrichment. Those files are # embedded in the output HTML report and can be downloaded from there. gene_column_name <- \"Gene_symbol\" genes <- annotation[[gene_column_name]]  plot_options <- list(   # When meta_replicate_column is not there, all datapoints are blue.   meta_replicate_column = \"Reactor\", # Colors the data points based on Reactor   cluster_heatmap_columns = FALSE # Per default FALSE, just for demonstration )  clustering_results <- SplineOmics::cluster_hits(   splineomics = splineomics,   adj_pthresholds = adj_pthresholds,   clusters = clusters,   genes = genes,   plot_info = plot_info,   plot_options = plot_options,   report_dir = report_dir,   adj_pthresh_avrg_diff_conditions = 0,   adj_pthresh_interaction_condition_time = 0.25 )"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"perform-gene-set-enrichment-analysis-gsea","dir":"Articles","previous_headings":"","what":"Perform gene set enrichment analysis (GSEA)","title":"get-started","text":"clustered hits identified, subsequent step gain biological insights perform GSEA. , respective genes can assigned clustered hit, GSEA can carried . proceed, Enrichr databases choice need downloaded: Per default file placed current working directory, root dir R project. run GSEA, downloaded database file loaded dataframe. , optionally, clusterProfiler parameters report dir can specified. function create_gsea_report() runs GSEA using clusterProfiler, generates HTML report returns GSEA dotplots R. function runs clusterProfiler clusters levels, generates HTML report: can view generated analysis report run_gsea function . report first shows enrichment results, 2 genes supported term, tabular format. table terms < 2 genes supporting can downloaded clicking button table. dotplots , every row term specific database, columns respective clusters. color scale contains info odds ratio size -log10 adj. p-value. terms > 2 genes support included plot. , cluster, just maximally 5 terms shown (terms highest odds ratios). Note example cluster 1 already 5 terms, cluster 2 , gets term also found cluster 1, term included sixth term cluster 1, way maximum 5 can exceeded. phase, like stationary , lead enrichment results, stated red message.","code":"# Specify which databases you want to download from Enrichr gene_set_lib <- c(   \"WikiPathways_2019_Human\",   \"NCI-Nature_2016\",   \"TRRUST_Transcription_Factors_2019\",   \"MSigDB_Hallmark_2020\",   \"GO_Cellular_Component_2018\",   \"CORUM\",   \"KEGG_2019_Human\",   \"TRANSFAC_and_JASPAR_PWMs\",   \"ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X\",   \"GO_Biological_Process_2018\",   \"GO_Molecular_Function_2018\",   \"Human_Gene_Atlas\" )  SplineOmics::download_enrichr_databases(   gene_set_lib = gene_set_lib,   filename = \"databases.tsv\" ) # Specify the filepath of the TSV file with the database info downloaded_dbs_filepath <- here::here(\"databases.tsv\")  # Load the file databases <- read.delim(   downloaded_dbs_filepath,   sep = \"\\t\",   stringsAsFactors = FALSE )  # Specify the clusterProfiler parameters clusterProfiler_params <- list(   pvalueCutoff = 0.05,   pAdjustMethod = \"BH\",   minGSSize = 10,   maxGSSize = 500,   qvalueCutoff = 0.2 )  report_dir <- here::here(   \"results\",   \"gsea_reports\" ) result <- SplineOmics::run_gsea(   # A dataframe with three columns: feature, cluster, and gene. Feature contains   # the integer index of the feature, cluster the integer specifying the cluster   # number, and gene the string of the gene, such as \"CLSTN2\".   levels_clustered_hits = clustering_results$clustered_hits_levels,   databases = databases,   clusterProfiler_params = clusterProfiler_params,   report_info = report_info,   report_dir = report_dir )"},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"get-started","text":"example showed functionalities SplineOmics package. can also run datatypes , including timeseries RNA-seq glycan data (, refer documentation README file GitHub page Usage/RNA-seq Glycan Data). get interactive version example, download SplineOmics package run function open_tutorial() opens R Markdown file, can run different code blocks working R Studio (recommendet) can easily check values individual variables generate output reports . run function open_template() get minimal R Markdown file, code written can use skeleton plug data run . hope SplineOmics package makes scientific data analysis easier. face problems (bugs code) satisfied documentation, open issue GitHub check options Feedback section README GitHub. Thank !","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/get-started.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"get-started","text":"","code":"#> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/local/R-4.3.3/lib/R/lib/libRblas.so  #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=de_AT.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=de_AT.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=de_AT.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=de_AT.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Europe/Vienna #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices datasets  utils     methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4       here_1.0.1        readxl_1.4.3      SplineOmics_0.1.0 #>  #> loaded via a namespace (and not attached): #>   [1] bitops_1.0-9             Rdpack_2.6.1             gridExtra_2.3            #>   [4] rlang_1.1.4              magrittr_2.0.3           clue_0.3-65              #>   [7] GetoptLong_1.0.5         matrixStats_1.4.1        compiler_4.3.3           #>  [10] reshape2_1.4.4           png_0.1-8                systemfonts_1.1.0        #>  [13] vctrs_0.6.5              stringr_1.5.1            pkgconfig_2.0.3          #>  [16] shape_1.4.6.1            crayon_1.5.3             fastmap_1.2.0            #>  [19] backports_1.5.0          caTools_1.18.3           utf8_1.2.4               #>  [22] rmarkdown_2.28           nloptr_2.1.1             ragg_1.3.3               #>  [25] purrr_1.0.2              xfun_0.48                cachem_1.1.0             #>  [28] jsonlite_1.8.9           progress_1.2.3           EnvStats_3.0.0           #>  [31] remaCor_0.0.18           BiocParallel_1.36.0      broom_1.0.7              #>  [34] parallel_4.3.3           prettyunits_1.2.0        cluster_2.1.6            #>  [37] R6_2.5.1                 bslib_0.8.0              stringi_1.8.4            #>  [40] RColorBrewer_1.1-3       limma_3.58.1             boot_1.3-29              #>  [43] cellranger_1.1.0         numDeriv_2016.8-1.1      jquerylib_0.1.4          #>  [46] Rcpp_1.0.13              iterators_1.0.14         knitr_1.48               #>  [49] base64enc_0.1-3          IRanges_2.36.0           Matrix_1.6-5             #>  [52] splines_4.3.3            tidyselect_1.2.1         rstudioapi_0.16.0        #>  [55] yaml_2.3.10              viridis_0.6.5            doParallel_1.0.17        #>  [58] gplots_3.2.0             codetools_0.2-19         plyr_1.8.9               #>  [61] lmerTest_3.1-3           lattice_0.22-5           tibble_3.2.1             #>  [64] withr_3.0.1              Biobase_2.62.0           evaluate_1.0.0           #>  [67] desc_1.4.3               zip_2.3.1                circlize_0.4.16          #>  [70] pillar_1.9.0             BiocManager_1.30.25      KernSmooth_2.23-22       #>  [73] renv_1.0.10              foreach_1.5.2            stats4_4.3.3             #>  [76] generics_0.1.3           rprojroot_2.0.4          S4Vectors_0.40.2         #>  [79] hms_1.1.3                ggplot2_3.5.1            munsell_0.5.1            #>  [82] scales_1.3.0             aod_1.3.3                minqa_1.2.8              #>  [85] gtools_3.9.5             RhpcBLASctl_0.23-42      glue_1.8.0               #>  [88] pheatmap_1.0.12          tools_4.3.3              fANCOVA_0.6-1            #>  [91] dendextend_1.18.0        variancePartition_1.32.5 lme4_1.1-35.5            #>  [94] openxlsx_4.2.7.1         mvtnorm_1.3-1            fs_1.6.4                 #>  [97] grid_4.3.3               tidyr_1.3.1              rbibutils_2.3            #> [100] colorspace_2.1-1         nlme_3.1-164             patchwork_1.3.0          #> [103] cli_3.6.3                textshaping_0.4.0        fansi_1.0.6              #> [106] viridisLite_0.4.2        svglite_2.1.3            ComplexHeatmap_2.18.0    #> [109] corpcor_1.6.10           gtable_0.3.5             sass_0.4.9               #> [112] digest_0.6.37            BiocGenerics_0.48.1      pbkrtest_0.5.3           #> [115] ggrepel_0.9.6            rjson_0.2.23             htmlwidgets_1.6.4        #> [118] farver_2.1.2             htmltools_0.5.8.1        pkgdown_2.1.1            #> [121] lifecycle_1.0.4          GlobalOptions_0.1.2      statmod_1.5.0            #> [124] MASS_7.3-60.0.1"},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"limma-result-categories","dir":"Articles","previous_headings":"","what":"limma Result Categories","title":"limma_result_categories","text":"limma analysis results can divided three categories, defined document: Time Effect: category focuses changes feature (e.g. protein) value occur time within single condition. Average Difference Conditions: category compares average feature values levels within condition, regardless time. Interaction Condition Time: category examines interaction time condition. identifies features whose value changes differently time depending condition.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"legend","dir":"Articles","previous_headings":"limma Result Categories","what":"Legend:","title":"limma_result_categories","text":"hit feature (e.g. protein) significantly changed time. Levels different factors condition experiment. example, bioreactor phase condition, exponential stationary levels within condition.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"category-1-time-effect","dir":"Articles","previous_headings":"limma Result Categories","what":"Category 1 (time effect)","title":"limma_result_categories","text":"Temporal pattern within level given feature → Hit","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"example-of-a-hit","dir":"Articles","previous_headings":"limma Result Categories > Category 1 (time effect)","what":"Example of a Hit","title":"limma_result_categories","text":"hit feature shows clear temporal pattern time. Clear temporal pattern time","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"example-of-no-hit","dir":"Articles","previous_headings":"limma Result Categories > Category 1 (time effect)","what":"Example of No Hit","title":"limma_result_categories","text":"clear temporal pattern","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"category-2-average-difference-conditions","dir":"Articles","previous_headings":"limma Result Categories","what":"Category 2 (average difference conditions)","title":"limma_result_categories","text":"Overall mean difference levels given feature → Hit","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"example-of-a-hit-1","dir":"Articles","previous_headings":"limma Result Categories > Category 2 (average difference conditions)","what":"Example of a Hit","title":"limma_result_categories","text":"clear temporal pattern levels overall mean difference ","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"example-of-no-hit-1","dir":"Articles","previous_headings":"limma Result Categories > Category 2 (average difference conditions)","what":"Example of No Hit","title":"limma_result_categories","text":"Clear temporal pattern levels overall mean difference feature value .","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"category-3-interaction-condition-time","dir":"Articles","previous_headings":"limma Result Categories","what":"Category 3 (interaction condition & time)","title":"limma_result_categories","text":"Treatment interacting time feature (time effect changing treatment, feature must different temporal patterns conditions/levels) → Hit","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"examples-of-hits","dir":"Articles","previous_headings":"limma Result Categories > Category 3 (interaction condition & time)","what":"Examples of Hits","title":"limma_result_categories","text":"Different temporal patterns observed level –> hit category 3. Different temporal patterns feature levels. Different temporal patterns feature levels.","code":""},{"path":"https://csbg.github.io/SplineOmics/articles/limma_result_categories.html","id":"example-of-no-hit-2","dir":"Articles","previous_headings":"limma Result Categories > Category 3 (interaction condition & time)","what":"Example of No Hit","title":"limma_result_categories","text":"Overall temporal pattern feature levels.","code":""},{"path":"https://csbg.github.io/SplineOmics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Rauter. Author, maintainer.","code":""},{"path":"https://csbg.github.io/SplineOmics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rauter T (2025). SplineOmics: Streamlines process analysing omics timeseries data splines. R package version 0.1.0, https://csbg.github.io/SplineOmics.","code":"@Manual{,   title = {SplineOmics: Streamlines the process of analysing omics timeseries data with splines},   author = {Thomas Rauter},   year = {2025},   note = {R package version 0.1.0},   url = {https://csbg.github.io/SplineOmics}, }"},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"splineomics","dir":"","previous_headings":"","what":"Streamlines the process of analysing omics timeseries data with splines","title":"Streamlines the process of analysing omics timeseries data with splines","text":"R package SplineOmics finds significant features (hits) time-series -omics data using splines limma hypothesis testing. clusters hits based spline shape showing results summary HTML reports. graphical abstract shows full workflow streamlined SplineOmics: Graphical Abstract SplineOmics Workflow","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Streamlines the process of analysing omics timeseries data with splines","text":"📘 Introduction 🐳 Docker Container 🎓 Tutorial 📋 Details 🧬 RNA-seq Glycan Data 📦 Dependencies 📚 Reading ❓ Getting Help 🤝 Contributing 💬 Feedback 📜 License 🎓 Citation 🌟 Contributors 🙏 Acknowledgements","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-introduction","dir":"","previous_headings":"","what":"📘 Introduction","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Welcome SplineOmics, R package designed streamline analysis -omics time-series data, followed automated HTML report generation.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"is-the-splineomics-package-of-use-for-me","dir":"","previous_headings":"📘 Introduction","what":"Is the SplineOmics package of use for me?","title":"Streamlines the process of analysing omics timeseries data with splines","text":"-omics data time, package help run limma splines, decide parameters use, perform clustering, run GSEA show result plots HTML reports. time-series data valid input limma package also valid input SplineOmics package (transcriptomics, proteomics, phosphoproteomics, metabolomics, glycan fractional abundances, etc.).","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"what-do-i-need-precisely","dir":"","previous_headings":"📘 Introduction","what":"What do I need precisely?","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Data: data matrix row feature (e.g., protein, metabolite, etc.) column sample taken specific time. data must NA values, normally distributed features dependence samples. Meta: table metadata columns/samples data matrix (e.g., batch, time point, etc.) Annotation (optional): table identifiers rows/features data matrix (e.g., gene protein name).","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"capabilities","dir":"","previous_headings":"📘 Introduction","what":"Capabilities","title":"Streamlines the process of analysing omics timeseries data with splines","text":"SplineOmics, can: Automatically perform exploratory data analysis: explore_data() function generates HTML report, containing various plots, density, PCA, correlation heatmap plots (example report). Explore various limma splines hyperparameters: Test combinations hyperparameters, different datasets, limma design formulas, degrees freedom, p-value thresholds, etc., using screen_limma_hyperparams() function (example report (along encoding)). Perform limma spline analysis: Use run_limma_splines() function perform limma analysis splines optimal hyperparameters identified (example report). Cluster significant features: Cluster significant features (hits) identified spline analysis cluster_hits() function (example report). Run GSEA clustered hits: Perform gene set enrichment analysis (GSEA) using clustered hits create_gsea_report() function (example report).","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"🔧 Installation","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Follow steps install SplineOmics package GitHub repository R environment.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"prerequisites","dir":"","previous_headings":"🔧 Installation","what":"Prerequisites","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Ensure R installed system. , download install CRAN. RStudio recommended user-friendly experience R. Download install RStudio posit.co.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"installation-steps","dir":"","previous_headings":"🔧 Installation","what":"Installation Steps","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Note Windows Users: Note installation paths potentially writable Windows. Therefore, can necessary set library path use path installations: Alternatively, can run RStudio administrator installation (however generally recommended, security risk). Additional note Windows Users: installation Windows, might see message indicating Rtools installed, typically required compiling R packages source. However, installation, Rtools necessary, can safely ignore message. Open RStudio R console. Install BiocManager Bioconductor dependencies (already installed) Install Bioconductor dependencies separately using BiocManager Install remotes package GitHub downloads (already installed) Install SplineOmics package GitHub non-Bioconductor dependencies, using remotes Verify installation SplineOmics package","code":"custom_lib_path <- \"C:/Rlibs\"  # Replace with your desired path  # Create the directory if it doesn't exist if (!dir.exists(custom_lib_path)) {     dir.create(       custom_lib_path,       showWarnings = FALSE,       recursive = TRUE       ) }  # Set the library path to include the new directory .libPaths(c(custom_lib_path, .libPaths()))  # Check if the new library path is added successfully if (custom_lib_path %in% .libPaths()) {     message(\"Library path set to: \", custom_lib_path) } else {     stop(\"Failed to set library path.\") } install.packages(   \"BiocManager\"   # lib = custom_lib_path  ) BiocManager::install(   c(\"ComplexHeatmap\", \"limma\")   # force = TRUE   # when encountering issues   # lib = custom_lib_path  ) install.packages(   \"remotes\"   # lib = custom_lib_path ) remotes::install_github(   \"csbg/SplineOmics\",   # GitHub repository   ref = \"0.1.0\",        # Specify the tag to install   dependencies = TRUE,  # Install all dependencies   upgrade = \"always\"    # Always upgrade dependencies   # force = TRUE        # when encountering issues   # lib = custom_lib_path  ) # Verify the installation of the SplineOmics package if (\"SplineOmics\" %in% rownames(installed.packages())) {   message(\"SplineOmics was installed successfully.\") } else {   message(\"SplineOmics installation failed. Please check for errors during installation.\") }"},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"troubleshooting","dir":"","previous_headings":"🔧 Installation","what":"Troubleshooting","title":"Streamlines the process of analysing omics timeseries data with splines","text":"encounter errors related dependencies package versions installation, try updating R RStudio latest versions repeat installation steps. issues specifically related SplineOmics package, check Issues section GitHub repository similar problems post new issue.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-docker-container","dir":"","previous_headings":"🔧 Installation","what":"🐳 Docker Container","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Alternatively, can run analysis Docker container. underlying Docker image encapsulates SplineOmics package together necessary environment dependencies. ensures higher levels reproducibility analysis carried consistent environment, independent operating system custom configurations. Please note must Docker Engine installed machine. instructions install , consult official Docker Engine installation guide. information Docker containers can found official Docker page. instructions downloading image SplineOmics package running container, please refer Docker instructions.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"troubleshooting-1","dir":"","previous_headings":"🔧 Installation > 🐳 Docker Container","what":"Troubleshooting","title":"Streamlines the process of analysing omics timeseries data with splines","text":"face “permission denied” issues Linux distributions, check vignette.","code":""},{"path":[]},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-tutorial","dir":"","previous_headings":"▶️ Usage","what":"🎓 Tutorial","title":"Streamlines the process of analysing omics timeseries data with splines","text":"tutorial covers real CHO cell time-series proteomics example start end. open R Markdown file tutorial RStudio, run: open R Markdown file RStudio containing template analysis, run:","code":"library(SplineOmics) open_tutorial() library(SplineOmics) open_template()"},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-details","dir":"","previous_headings":"▶️ Usage","what":"📋 Details","title":"Streamlines the process of analysing omics timeseries data with splines","text":"detailed description arguments outputs functions package (exported internal functions) can found .","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"design-limma-design-formula","dir":"","previous_headings":"▶️ Usage > 📋 Details","what":"Design limma design formula","title":"Streamlines the process of analysing omics timeseries data with splines","text":"quick guide design limma design formula can found explanation three different limma results ","code":""},{"path":[]},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"rna-seq-data","dir":"","previous_headings":"▶️ Usage > 🧬 RNA-seq and Glycan Data","what":"RNA-seq data","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Transcriptomics data must preprocessed limma. need provide appropriate object, voom object, rna_seq_data argument SplineOmics object (see documentation). Along , normalized matrix (e.g., $E slot voom object) must passed data argument. allows flexibility preprocessing; can use method prefer long final object matrix compatible limma. One way preprocess RNA-seq data using preprocess_rna_seq_data() function included SplineOmics package (see documentation). can find example analysis RNA-seq data SplineOmics package.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"glycan-fractional-abundance-data","dir":"","previous_headings":"▶️ Usage > 🧬 RNA-seq and Glycan Data","what":"Glycan fractional abundance data","title":"Streamlines the process of analysing omics timeseries data with splines","text":"glycan fractional abundance data matrix, row represents type glycan columns correspond timepoints, must transformed analysis. preprocessing step essential due compositional nature data. compositional data, increase abundance one component (glycan) necessarily results decrease others, introducing dependency among variables can bias analysis. One way address issue applying Centered Log Ratio (CLR) transformation data clr function compositions package: results clr transformed data can harder understand interpret however. prefer ease interpretation fine results contain artifacts due compositional nature data, log2 transform data instead use input SplineOmics package.","code":"library(compositions) clr_transformed_data <- clr(data_matrix)  # use as SplineOmics input log2_transformed_data <- log2(data_matrix)  # use as SplineOmics input"},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-dependencies","dir":"","previous_headings":"","what":"📦 Dependencies","title":"Streamlines the process of analysing omics timeseries data with splines","text":"SplineOmics package relies several R packages functionality. list dependencies automatically installed along SplineOmics. already packages installed, ensure date avoid compatibility issues. ComplexHeatmap (>= 2.18.0): creating complex heatmaps advanced features. base64enc (>= 0.1-3): encoding/decoding base64. dendextend (>= 1.17.1): extending dendrogram objects, allowing easier manipulation dendrograms. dplyr (>= 1.1.4): data manipulation. ggplot2 (>= 3.5.1): creating elegant data visualizations using grammar graphics. ggrepel (>= 0.9.5): better label placement ggplot2. (>= 1.0.1): constructing paths project’s files. limma (>= 3.58.1): linear models microarray RNA-seq analysis. openxlsx (>= 4.2.6.1): reading, writing, editing .xlsx files. patchwork (>= 1.2.0): combining multiple ggplot objects single plot. pheatmap (>= 1.0.12): creating aesthetically pleasing heatmaps. progress (>= 1.2.3): adding progress bars loops apply functions. purrr (>= 1.0.2): functional programming tools. rlang (>= 1.1.4): working core language features R. scales (>= 1.3.0): scale functions visualizations. svglite (>= 2.1.3): creating high-quality vector graphics (SVG). tibble (>= 3.2.1): creating tidy data frames. tidyr (>= 1.3.1): tidying data. zip (>= 2.3.1): compressing combining files zip archives.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"optional-dependencies","dir":"","previous_headings":"📦 Dependencies","what":"Optional Dependencies","title":"Streamlines the process of analysing omics timeseries data with splines","text":"packages optional needed specific functionality: edgeR (>= 4.0.16): preprocessing RNA-seq data preprocess_rna_seq_data() function. clusterProfiler (>= 4.10.1): run_gsea() function (gene set enrichment analysis). rstudioapi (>= 0.16.0): open_tutorial() open_template() functions.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"r-version","dir":"","previous_headings":"📦 Dependencies","what":"R Version","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Recommended: R 4.3.3 higher","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-further-reading","dir":"","previous_headings":"","what":"📚 Further Reading","title":"Streamlines the process of analysing omics timeseries data with splines","text":"interested gaining deeper understanding methodologies used SplineOmics package, recommended publications: Splines: learn splines, can refer review. limma: read limma R package, can refer publication. PCA: learn PCA, download read document. Hierarchical clustering: get information hierarchical clustering, can refer web article.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-getting-help","dir":"","previous_headings":"","what":"❓ Getting Help","title":"Streamlines the process of analysing omics timeseries data with splines","text":"encounter bug suggestion improving SplineOmics package, encourage open issue GitHub repository. opening new issue, please check see question bug already reported another user. helps avoid duplicate reports ensures can address problems efficiently. detailed questions, discussions, contributions regarding package’s use development, please refer GitHub Discussions page SplineOmics.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-contributing","dir":"","previous_headings":"","what":"🤝 Contributing","title":"Streamlines the process of analysing omics timeseries data with splines","text":"welcome contributions SplineOmics package! Whether ’re interested fixing bugs, adding new features, improving documentation, help greatly appreciated. ’s can contribute: Report Bug Request Feature: encounter bug idea new feature, please open issue GitHub repository. opening new issue, check see issue already reported feature requested another user. Submit Pull Request: ’ve developed bug fix new feature ’d like share, submit pull request. Improve Documentation: Good documentation crucial project. notice missing incorrect documentation, please feel free contribute. Please adhere Code Conduct interactions project. Thank considering contributing SplineOmics. efforts make open-source community fantastic place learn, inspire, create.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-feedback","dir":"","previous_headings":"","what":"💬 Feedback","title":"Streamlines the process of analysing omics timeseries data with splines","text":"appreciate feedback! Besides raising issues, can provide feedback following ways: Direct Email: Send feedback directly Thomas Rauter. Anonymous Feedback: Use Google Form provide anonymous feedback answering questions. feedback helps us improve project address issues may encounter.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-license","dir":"","previous_headings":"","what":"📜 License","title":"Streamlines the process of analysing omics timeseries data with splines","text":"package licensed MIT License: LICENSE © 2024 Thomas Rauter. rights reserved.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-citation","dir":"","previous_headings":"","what":"🎓 Citation","title":"Streamlines the process of analysing omics timeseries data with splines","text":"SplineOmics package currently published peer-reviewed scientific journal similar outlet. However, package helped work, consider citing GitHub repository. cite package, can use citation information provided CITATION.cff file. can also generate citation various formats using CITATION.cff file visiting top right repo clicking “Cite repository” button. Also, like package, consider giving GitHub repository star. support helps us continued development improvement SplineOmics. Thank using package!","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-contributors","dir":"","previous_headings":"","what":"🌟 Contributors","title":"Streamlines the process of analysing omics timeseries data with splines","text":"Thomas-Rauter - 🚀 Wrote package, developed approach together VSchaepertoens guidance nfortelny skafdasschaf. nfortelny - 🧠 Principal Investigator, provided guidance support overall approach. skafdasschaf - 🔧 Helped reviewing code, delivered improvement suggestions scientific guidance develop approach. VSchaepertoens - ✨ Developed one internal plotting function, well code exploratory data analysis plots, overall approach together Thomas-Rauter.","code":""},{"path":"https://csbg.github.io/SplineOmics/index.html","id":"id_-acknowledgements","dir":"","previous_headings":"","what":"🙏 Acknowledgements","title":"Streamlines the process of analysing omics timeseries data with splines","text":"work carried context DigiTherapeutX project, funded Austrian Science Fund (FWF). research conducted supervision Prof. Nikolaus Fortelny, leads Computational Systems Biology working group Paris Lodron University Salzburg, Austria. can find information Prof. Fortelny’s research group .","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/cluster_hits.html","id":null,"dir":"Reference","previous_headings":"","what":"cluster_hits() — cluster_hits","title":"cluster_hits() — cluster_hits","text":"Performs clustering hits top tables generated differential expression analysis. function filters hits based adjusted p-value thresholds, extracts spline coefficients significant features, normalizes coefficients, applies hierarchical clustering. results, including clustering assignments normalized spline curves, saved specified directory compiled HTML report.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/cluster_hits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cluster_hits() — cluster_hits","text":"","code":"cluster_hits(   splineomics,   clusters,   adj_pthresholds = c(0.05),   adj_pthresh_avrg_diff_conditions = 0,   adj_pthresh_interaction_condition_time = 0,   genes = NULL,   plot_info = list(y_axis_label = \"Value\", time_unit = \"min\", treatment_labels = NA,     treatment_timepoints = NA),   plot_options = list(cluster_heatmap_columns = FALSE, meta_replicate_column = NULL),   raw_data = NULL,   report_dir = here::here(),   report = TRUE )"},{"path":"https://csbg.github.io/SplineOmics/reference/cluster_hits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cluster_hits() — cluster_hits","text":"splineomics S3 object class `SplineOmics` contains necessary data parameters analysis, including: data: original expression dataset used differential   expression analysis. meta: dataframe containing metadata corresponding   data, must include 'Time' column columns specified   conditions. design: character length 1 representing limma   design formula. condition: Character length 1 specifying column name   meta used define groups analysis. spline_params: list spline parameters analysis. meta_batch_column: character string specifying column   name metadata used batch effect removal. meta_batch2_column: character string specifying second   column name metadata used batch effect removal. limma_splines_result: list data frames, representing    top table differential expression analysis, containing least    'adj.P.Val' expression data columns. clusters Character integer vector specifying number clusters adj_pthresholds Numeric vector p-value thresholds filtering hits top table. adj_pthresh_avrg_diff_conditions p-value threshold results average difference condition limma result. Per default 0 ( turned ). adj_pthresh_interaction_condition_time p-value threshold results interaction condition time limma result. Per default 0 (turned ). genes character vector containing gene names features analyzed. plot_info List containing elements y_axis_label (string), time_unit (string), treatment_labels (character vector), treatment_timepoints (integer vector). can also NA. list used add info spline plots. time_unit used label x-axis, treatment_labels -timepoints used create vertical dashed lines, indicating positions treatments (feeding, temperature shift, etc.). plot_options List specific fields (cluster_heatmap_columns = Bool) allow customization plotting behavior. raw_data Optional. Data matrix raw (unimputed) data, still containing NA values. provided, highlights datapoints spline plots originally NA imputed. report_dir Character string specifying directory path HTML report output files saved. report Boolean TRUE FALSE value specifing report generated.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/cluster_hits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cluster_hits() — cluster_hits","text":"list element corresponds group factor contains clustering results,         including `clustered_hits` data frame, hierarchical clustering object         `hc`, `curve_values`         data frame normalized spline curves, `top_table`         cluster assignments.","code":""},{"path":[]},{"path":"https://csbg.github.io/SplineOmics/reference/create_limma_report.html","id":null,"dir":"Reference","previous_headings":"","what":"create_limma_report() — create_limma_report","title":"create_limma_report() — create_limma_report","text":"Generates HTML report based results limma analysis splines. report includes various plots sections summarizing analysis results time effects, average differences conditions, interaction effects condition time.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/create_limma_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_limma_report() — create_limma_report","text":"","code":"create_limma_report(splineomics, adj_pthresh = 0.05, report_dir = here::here())"},{"path":"https://csbg.github.io/SplineOmics/reference/create_limma_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_limma_report() — create_limma_report","text":"splineomics S3 object class `SplineOmics` contains necessary data parameters analysis, including: limma_splines_result: list containing top tables    differential expression analysis three different limma results. meta: data frame sample metadata. Must contain column                      \"Time\". condition: character string specifying column name                          metadata (meta) defines groups                          analysis. column contains levels                           \"exponential\" \"stationary\" phases,                           \"drug\" \"no_drug\" treatments. annotation: data frame containing feature information,                            gene protein names, associated                            expression data. report_info: list containing metadata analysis                             reporting purposes. adj_pthresh numeric value specifying adjusted p-value threshold significance. Default 0.05. Must > 0 < 1. report_dir string specifying directory report saved. Default current working directory.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/create_limma_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_limma_report() — create_limma_report","text":"list plots included generated HTML report.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/create_splineomics.html","id":null,"dir":"Reference","previous_headings":"","what":"create_splineomics() — create_splineomics","title":"create_splineomics() — create_splineomics","text":"Creates SplineOmics object containing variables commonly used across multiple functions package. object passed argument functions package.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/create_splineomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_splineomics() — create_splineomics","text":"","code":"create_splineomics(   data,   meta,   condition,   rna_seq_data = NULL,   annotation = NULL,   report_info = NULL,   meta_batch_column = NULL,   meta_batch2_column = NULL,   feature_name_columns = NULL,   design = NULL,   dream_params = NULL,   mode = NULL,   spline_params = NULL,   padjust_method = \"BH\" )"},{"path":"https://csbg.github.io/SplineOmics/reference/create_splineomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_splineomics() — create_splineomics","text":"data actual omics data. case rna_seq_data argument used, still provide argument. case, input data matrix (example $E part voom object). Assign feature names row headers (otherwise, just numbers feature names). meta Metadata associated omics data. condition condition variable. rna_seq_data object containing preprocessed RNA-seq data, output `limma::voom` similar preprocessing pipeline. argument subjected input control. Rather, regard relies input control `limma::lmfit` function. annotation dataframe feature descriptions data (optional). report_info list containing report information omics data type, data description, data collection date, analyst name, contact info, project name (optional). meta_batch_column Column meta batch information (optional). meta_batch2_column Column secondary meta batch information (optional). feature_name_columns Character vector containing column names annotation info describe features. argument used specify HTML report exactly feature names displayed individual spline plot created. Use vector used create row headers data matrix! design design matrix similar object (optional). mode design formula, must specify either 'isolated' 'integrated'. Isolated means limma determines results level using data level. Integrated means limma determines  results levels using full dataset (levels). spline_params Parameters spline functions (optional). Must contain named elements spline_type, must contain either string \"n\" natural cubic splines, \"b\", B-splines, named element degree case B-splines, must contain integer, named element dof, specifying degree freedom, containing integer required natural B-splines. padjust_method Method p-value adjustment, one \"none\", \"BH\", \"\", \"holm\", \"bonferroni\", \"hochberg\", \"hommel\". Defaults \"BH\" (Benjamini-Hochberg).","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/create_splineomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_splineomics() — create_splineomics","text":"SplineOmics object.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/download_enrichr_databases.html","id":null,"dir":"Reference","previous_headings":"","what":"download_enrichr_databases() — download_enrichr_databases","title":"download_enrichr_databases() — download_enrichr_databases","text":"function downloads gene sets specified Enrichr databases saves  specified output directory .tsv file. file named  timestamp ensure uniqueness.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/download_enrichr_databases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download_enrichr_databases() — download_enrichr_databases","text":"","code":"download_enrichr_databases(   gene_set_lib,   output_dir = here::here(),   filename = NULL )"},{"path":"https://csbg.github.io/SplineOmics/reference/download_enrichr_databases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"download_enrichr_databases() — download_enrichr_databases","text":"gene_set_lib character vector database names download Enrichr. output_dir character string specifying output directory .tsv file saved. Defaults current working directory. filename Name output file (file extension. Due commas present terms, .tsv recommendet). ommited, file named all_databases_timestamp.tsv.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/download_enrichr_databases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"download_enrichr_databases() — download_enrichr_databases","text":"function return value saves .tsv file         specified directory containing gene sets specified         Enrichr databases.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/explore_data.html","id":null,"dir":"Reference","previous_headings":"","what":"explore_data() — explore_data","title":"explore_data() — explore_data","text":"function automatically generates exploratory data analysis (EDA) plots provided data. include density plots, boxplots, PCA plots, MDS plots, variance explained plots, violin plots, mean correlation time, first lag autocorrelation, lag1 differences, coefficient variation. function returns EDA plots list , default, creates HTML report containing plots, saving specified report directory.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/explore_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"explore_data() — explore_data","text":"","code":"explore_data(splineomics, report_dir = here::here(), report = TRUE)"},{"path":"https://csbg.github.io/SplineOmics/reference/explore_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"explore_data() — explore_data","text":"splineomics SplineOmics object, containing data, meta, condition, report_info, meta_batch_column, meta_batch2_column. report_dir non-empty string specifying report directory. output HTML reports placed . Default current working dir, determined library: ::(). report Boolean TRUE FALSE value, specifying report generated . report generated per default, plots plot objects inside R desired, argument can set FALSE.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/explore_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"explore_data() — explore_data","text":"list ggplot objects representing various exploratory plots.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/extract_data.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_data() — extract_data","title":"extract_data() — extract_data","text":"function takes dataframe identifies rectangular quadratic area containing numeric data, starting first occurrence 6x6 block numeric values. extracts area matrix, ensuring row contains numeric values. Rows NA values removed resulting matrix.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/extract_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_data() — extract_data","text":"","code":"extract_data(data, feature_name_columns = NA, user_prompt = TRUE)"},{"path":"https://csbg.github.io/SplineOmics/reference/extract_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_data() — extract_data","text":"data dataframe loaded tabular file, potentially containing rectangular quadratic area numeric data amidst values. feature_name_columns (Optional) character vector, specifying columns dataframe data, used construct feature names. ommited, feature names just numbers (stored characters) starting 1 (1, 2, 3, etc.) user_prompt Boolean specifying whether user prompt correct format input data shown.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/extract_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_data() — extract_data","text":"numeric matrix row headers appropriate column names.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/make_scatter_plot_html.html","id":null,"dir":"Reference","previous_headings":"","what":"make_scatter_plot_html() — make_scatter_plot_html","title":"make_scatter_plot_html() — make_scatter_plot_html","text":"Generate scatter plot report rach feature embedded base64 images","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/make_scatter_plot_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_scatter_plot_html() — make_scatter_plot_html","text":"","code":"make_scatter_plot_html(   data,   meta,   output_file = \"scatter_plots_base64.html\",   meta_replicate_column = NULL )"},{"path":"https://csbg.github.io/SplineOmics/reference/make_scatter_plot_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_scatter_plot_html() — make_scatter_plot_html","text":"data matrix features rows samples columns. Row names feature names. meta data frame meta information. Must contain numeric column \"Time\". output_file name HTML output file.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/open_template.html","id":null,"dir":"Reference","previous_headings":"","what":"open_template() — open_template","title":"open_template() — open_template","text":"function opens `template.Rmd` file RStudio interactive use. template file provides structure users quickly set personal analysis.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/open_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"open_template() — open_template","text":"","code":"open_template()"},{"path":"https://csbg.github.io/SplineOmics/reference/open_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"open_template() — open_template","text":"successful, opens `template.Rmd` file RStudio user interact . `rstudioapi` installed available, template file found, error thrown corresponding message.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/open_tutorial.html","id":null,"dir":"Reference","previous_headings":"","what":"open_tutorial() — open_tutorial","title":"open_tutorial() — open_tutorial","text":"function opens `tutorial.Rmd` file RStudio interactive use. Users can run code chunk step step.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/open_tutorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"open_tutorial() — open_tutorial","text":"","code":"open_tutorial()"},{"path":"https://csbg.github.io/SplineOmics/reference/open_tutorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"open_tutorial() — open_tutorial","text":"successful, opens `tutorial.Rmd` file RStudio user interact . `rstudioapi` installed available, tutorial file found, error thrown corresponding message.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/preprocess_rna_seq_data.html","id":null,"dir":"Reference","previous_headings":"","what":"preprocess_rna_seq_data() — preprocess_rna_seq_data","title":"preprocess_rna_seq_data() — preprocess_rna_seq_data","text":"`preprocess_rna_seq_data()` function performs essential preprocessing steps raw RNA-seq counts. includes creating `DGEList` object, normalizing counts using default TMM (Trimmed Mean M-values) normalization via `edgeR::calcNormFactors` function, applying `voom` transformation `limma` package obtain log-transformed counts per million (logCPM) associated precision weights. require different normalization method, can supply custom normalization function.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/preprocess_rna_seq_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"preprocess_rna_seq_data() — preprocess_rna_seq_data","text":"","code":"preprocess_rna_seq_data(   raw_counts,   meta,   spline_params,   design,   normalize_func = NULL )"},{"path":"https://csbg.github.io/SplineOmics/reference/preprocess_rna_seq_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"preprocess_rna_seq_data() — preprocess_rna_seq_data","text":"raw_counts matrix raw RNA-seq counts (genes rows, samples columns). meta dataframe containing metadata data. spline_params Parameters spline functions (optional). Must contain named elements spline_type, must contain either string \"n\" natural cubic splines, \"b\", B-splines, named element degree case B-splines, must contain integer, named element dof, specifying degree freedom, containing integer required natural B-splines. design design formula limma analysis, '~ 1 + Phase*X + Reactor'. normalize_func optional normalization function. provided, function used normalize `DGEList` object. provided, TMM normalization (via `edgeR::calcNormFactors`) used default. Must take input y : y <- edgeR::DGEList(counts = raw_counts) output y normalized counts.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/preprocess_rna_seq_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"preprocess_rna_seq_data() — preprocess_rna_seq_data","text":"`voom` object, includes log2-counts per million (logCPM)  matrix observation-specific weights.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/print.SplineOmics.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function for SplineOmics objects — print.SplineOmics","title":"Print function for SplineOmics objects — print.SplineOmics","text":"function provides summary print SplineOmics object, showing relevant information number features, samples, metadata, RNA-seq data, annotation, spline parameters.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/print.SplineOmics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function for SplineOmics objects — print.SplineOmics","text":"","code":"# S3 method for class 'SplineOmics' print(x, ...)"},{"path":"https://csbg.github.io/SplineOmics/reference/print.SplineOmics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function for SplineOmics objects — print.SplineOmics","text":"x SplineOmics object created `create_splineomics` function. ... Additional arguments passed methods.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/print.SplineOmics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print function for SplineOmics objects — print.SplineOmics","text":"function return value. prints summary SplineOmics object.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/print.SplineOmics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print function for SplineOmics objects — print.SplineOmics","text":"function automatically called SplineOmics object printed. provides concise overview object's contents attributes, including dimensions data, available metadata, relevant information annotations spline parameters.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/run_gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"run_gsea() — run_gsea","title":"run_gsea() — run_gsea","text":"function generates Gene Set Enrichment Analysis (GSEA) report based clustered hit levels, gene data, specified databases. processes input data, manages GSEA levels, produces HTML report plots.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/run_gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_gsea() — run_gsea","text":"","code":"run_gsea(   levels_clustered_hits,   databases,   report_info,   clusterProfiler_params = NA,   plot_titles = NA,   universe = NULL,   report_dir = here::here() )"},{"path":"https://csbg.github.io/SplineOmics/reference/run_gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_gsea() — run_gsea","text":"levels_clustered_hits list clustered hits different levels. databases list databases gene set enrichment analysis. report_info list containing information report generation. clusterProfiler_params Additional parameters GSEA analysis, default NA. include adj_p_value, pAdjustMethod, etc (see clusterProfiler documentation). plot_titles Titles plots, default NA. universe Enrichment background data, default NULL. report_dir Directory report saved, default `::()`.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/run_gsea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_gsea() — run_gsea","text":"list plots generated GSEA report.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/run_limma_splines.html","id":null,"dir":"Reference","previous_headings":"","what":"run_limma_splines() — run_limma_splines","title":"run_limma_splines() — run_limma_splines","text":"function performs limma spline analysis identify significant time-dependent changes features (e.g., proteins) within omics time-series dataset. evaluates features within condition level levels comparing average differences interactions time condition.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/run_limma_splines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_limma_splines() — run_limma_splines","text":"","code":"run_limma_splines(splineomics)"},{"path":"https://csbg.github.io/SplineOmics/reference/run_limma_splines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_limma_splines() — run_limma_splines","text":"splineomics S3 object class `SplineOmics` contains following elements: data: matrix omics dataset, feature   names optionally row headers. rna_seq_data: object containing preprocessed   RNA-seq data,   output `limma::voom` similar preprocessing pipeline. meta: dataframe containing metadata corresponding   data, must include 'Time' column column specified   condition. design: character string representing limma design   formula. condition: character string specifying column name   meta used define groups analysis. spline_params: list spline parameters used   analysis, including: spline_type: type spline (e.g., \"n\" natural       splines \"b\" B-splines). dof: Degrees freedom spline. knots: Positions internal knots (B-splines). bknots: Boundary knots (B-splines). degree: Degree spline (B-splines ).","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/run_limma_splines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_limma_splines() — run_limma_splines","text":"SplineOmics object, updated list three elements:         - `time_effect`: list top tables level time                          effect.         - `avrg_diff_conditions`: list top tables comparison                                  levels. comparison                                  average difference values.         - `interaction_condition_time`: list top tables                                         comparison levels.                                         comparison interaction                                         condition time.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/screen_limma_hyperparams.html","id":null,"dir":"Reference","previous_headings":"","what":"screen_limma_hyperparams() — screen_limma_hyperparams","title":"screen_limma_hyperparams() — screen_limma_hyperparams","text":"function screens various combinations hyperparameters limma analysis, including designs, modes, degrees freedom. validates inputs, generates results combinations, plots outcomes. Finally, may also involved generating HTML report part larger analysis workflow.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/screen_limma_hyperparams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"screen_limma_hyperparams() — screen_limma_hyperparams","text":"","code":"screen_limma_hyperparams(   splineomics,   datas,   datas_descr,   metas,   designs,   modes,   spline_test_configs,   report_dir = here::here(),   adj_pthresholds = c(0.05),   rna_seq_datas = NULL,   time_unit = \"min\",   padjust_method = \"BH\" )"},{"path":"https://csbg.github.io/SplineOmics/reference/screen_limma_hyperparams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"screen_limma_hyperparams() — screen_limma_hyperparams","text":"splineomics S3 object class `SplineOmics` contains necessary data parameters analysis, including: condition: string specifying column name meta                           dataframe, contains levels separate                           experiment ('treatment' can condition,                           'drug' 'drug' can levels                           condition). report_info: meta_batch_column: character string specifying meta                                   batch column. meta_batch2_column: character string specifying second                                    meta batch column (limma function                                    removeBatchEffect supports maximum                                    two batch columns.) datas list matrices containing datasets analyzed. datas_descr description object data. metas list data frames containing metadata dataset `datas`. designs character vector design formulas limma analysis. modes character vector must length 'designs'. design formula, must specify either 'isolated' 'integrated'. Isolated means limma determines results level using data level. Integrated means limma determines results levels using full dataset (levels). spline_test_configs configuration object spline tests. report_dir non-empty string specifying report directory. adj_pthresholds numeric vector p-value thresholds significance determination. rna_seq_datas list RNA-seq data objects, voom object derived limma::voom function. time_unit character string specifying time unit label plots. padjust_method character string specifying method p-value adjustment.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/screen_limma_hyperparams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"screen_limma_hyperparams() — screen_limma_hyperparams","text":"Returns list plots generated limma analysis results.         element list corresponds different combination         hyperparameters.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/update_splineomics.html","id":null,"dir":"Reference","previous_headings":"","what":"update_splineomics() — update_splineomics","title":"update_splineomics() — update_splineomics","text":"Updates SplineOmics object modifying existing fields adding new ones.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/update_splineomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update_splineomics() — update_splineomics","text":"","code":"update_splineomics(splineomics, ...)"},{"path":"https://csbg.github.io/SplineOmics/reference/update_splineomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update_splineomics() — update_splineomics","text":"splineomics SplineOmics object updated. ... Named arguments new values fields updated added.","code":""},{"path":"https://csbg.github.io/SplineOmics/reference/update_splineomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"update_splineomics() — update_splineomics","text":"updated SplineOmics object.","code":""}]
